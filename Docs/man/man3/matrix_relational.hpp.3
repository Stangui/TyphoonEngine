.TH "Typhoon/ThirdParty/glm/glm/ext/matrix_relational.hpp" 3 "Sat Jul 20 2019" "Version 0.1" "Typhoon Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Typhoon/ThirdParty/glm/glm/ext/matrix_relational.hpp
.SH SYNOPSIS
.br
.PP
\fC#include '\&.\&./detail/qualifier\&.hpp'\fP
.br
\fC#include 'matrix_relational\&.inl'\fP
.br

.SS "Namespaces"

.in +1c
.ti -1c
.RI " \fBglm\fP"
.br
.RI "\fBCore features\fP "
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "template<length_t C, length_t R, typename T , qualifier Q> GLM_FUNC_DECL GLM_CONSTEXPR vec< C, bool, Q > \fBglm::equal\fP (mat< C, R, T, Q > const &x, mat< C, R, T, Q > const &y)"
.br
.ti -1c
.RI "template<length_t C, length_t R, typename T , qualifier Q> GLM_FUNC_DECL GLM_CONSTEXPR vec< C, bool, Q > \fBglm::notEqual\fP (mat< C, R, T, Q > const &x, mat< C, R, T, Q > const &y)"
.br
.ti -1c
.RI "template<length_t C, length_t R, typename T , qualifier Q> GLM_FUNC_DECL GLM_CONSTEXPR vec< C, bool, Q > \fBglm::equal\fP (mat< C, R, T, Q > const &x, mat< C, R, T, Q > const &y, T epsilon)"
.br
.ti -1c
.RI "template<length_t C, length_t R, typename T , qualifier Q> GLM_FUNC_DECL GLM_CONSTEXPR vec< C, bool, Q > \fBglm::equal\fP (mat< C, R, T, Q > const &x, mat< C, R, T, Q > const &y, vec< C, T, Q > const &epsilon)"
.br
.ti -1c
.RI "template<length_t C, length_t R, typename T , qualifier Q> GLM_FUNC_DECL GLM_CONSTEXPR vec< C, bool, Q > \fBglm::notEqual\fP (mat< C, R, T, Q > const &x, mat< C, R, T, Q > const &y, T epsilon)"
.br
.ti -1c
.RI "template<length_t C, length_t R, typename T , qualifier Q> GLM_FUNC_DECL GLM_CONSTEXPR vec< C, bool, Q > \fBglm::notEqual\fP (mat< C, R, T, Q > const &x, mat< C, R, T, Q > const &y, vec< C, T, Q > const &epsilon)"
.br
.ti -1c
.RI "template<length_t C, length_t R, typename T , qualifier Q> GLM_FUNC_DECL GLM_CONSTEXPR vec< C, bool, Q > \fBglm::equal\fP (mat< C, R, T, Q > const &x, mat< C, R, T, Q > const &y, int ULPs)"
.br
.ti -1c
.RI "template<length_t C, length_t R, typename T , qualifier Q> GLM_FUNC_DECL GLM_CONSTEXPR vec< C, bool, Q > \fBglm::equal\fP (mat< C, R, T, Q > const &x, mat< C, R, T, Q > const &y, vec< C, int, Q > const &ULPs)"
.br
.ti -1c
.RI "template<length_t C, length_t R, typename T , qualifier Q> GLM_FUNC_DECL GLM_CONSTEXPR vec< C, bool, Q > \fBglm::notEqual\fP (mat< C, R, T, Q > const &x, mat< C, R, T, Q > const &y, int ULPs)"
.br
.ti -1c
.RI "template<length_t C, length_t R, typename T , qualifier Q> GLM_FUNC_DECL GLM_CONSTEXPR vec< C, bool, Q > \fBglm::notEqual\fP (mat< C, R, T, Q > const &x, mat< C, R, T, Q > const &y, vec< C, int, Q > const &ULPs)"
.br
.in -1c
.SH "Detailed Description"
.PP 
\fBGLM_EXT_matrix_relational\fP 
.SH "Author"
.PP 
Generated automatically by Doxygen for Typhoon Engine from the source code\&.
