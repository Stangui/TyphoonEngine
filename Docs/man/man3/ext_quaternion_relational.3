.TH "ext_quaternion_relational" 3 "Sat Jul 20 2019" "Version 0.1" "Typhoon Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ext_quaternion_relational
.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "template<typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP< 4, bool, Q > \fBglm::equal\fP (\fBqua\fP< T, Q > const &x, \fBqua\fP< T, Q > const &y)"
.br
.ti -1c
.RI "template<typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP< 4, bool, Q > \fBglm::equal\fP (\fBqua\fP< T, Q > const &x, \fBqua\fP< T, Q > const &y, T \fBepsilon\fP)"
.br
.ti -1c
.RI "template<typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP< 4, bool, Q > \fBglm::notEqual\fP (\fBqua\fP< T, Q > const &x, \fBqua\fP< T, Q > const &y)"
.br
.ti -1c
.RI "template<typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP< 4, bool, Q > \fBglm::notEqual\fP (\fBqua\fP< T, Q > const &x, \fBqua\fP< T, Q > const &y, T \fBepsilon\fP)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Exposes comparison functions for quaternion types that take a user defined epsilon values\&.
.PP
Include <\fBglm/ext/quaternion_relational\&.hpp\fP> to use the features of this extension\&.
.PP
\fBSee also:\fP
.RS 4
core_vector_relational 
.PP
\fBGLM_EXT_vector_relational\fP 
.PP
\fBGLM_EXT_matrix_relational\fP 
.PP
\fBGLM_EXT_quaternion_float\fP 
.PP
\fBGLM_EXT_quaternion_double\fP 
.RE
.PP

.SH "Function Documentation"
.PP 
.SS "template<typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP<4, bool, Q> glm::equal (\fBqua\fP< T, Q > const & x, \fBqua\fP< T, Q > const & y)"
Returns the component-wise comparison of result x == y\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP Floating-point scalar types 
.br
\fIQ\fP Value from qualifier enum 
.RE
.PP

.SS "template<typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP<4, bool, Q> glm::equal (\fBqua\fP< T, Q > const & x, \fBqua\fP< T, Q > const & y, T epsilon)"
Returns the component-wise comparison of |x - y| < epsilon\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP Floating-point scalar types 
.br
\fIQ\fP Value from qualifier enum 
.RE
.PP

.SS "template<typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP<4, bool, Q> glm::notEqual (\fBqua\fP< T, Q > const & x, \fBqua\fP< T, Q > const & y)"
Returns the component-wise comparison of result x != y\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP Floating-point scalar types 
.br
\fIQ\fP Value from qualifier enum 
.RE
.PP

.SS "template<typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP<4, bool, Q> glm::notEqual (\fBqua\fP< T, Q > const & x, \fBqua\fP< T, Q > const & y, T epsilon)"
Returns the component-wise comparison of |x - y| >= epsilon\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP Floating-point scalar types 
.br
\fIQ\fP Value from qualifier enum 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Typhoon Engine from the source code\&.
