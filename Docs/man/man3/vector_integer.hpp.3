.TH "Typhoon/ThirdParty/glm/glm/ext/vector_integer.hpp" 3 "Sat Jul 20 2019" "Version 0.1" "Typhoon Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Typhoon/ThirdParty/glm/glm/ext/vector_integer.hpp
.SH SYNOPSIS
.br
.PP
\fC#include '\&.\&./detail/setup\&.hpp'\fP
.br
\fC#include '\&.\&./detail/qualifier\&.hpp'\fP
.br
\fC#include '\&.\&./detail/_vectorize\&.hpp'\fP
.br
\fC#include '\&.\&./vector_relational\&.hpp'\fP
.br
\fC#include '\&.\&./common\&.hpp'\fP
.br
\fC#include <limits>\fP
.br
\fC#include 'vector_integer\&.inl'\fP
.br

.SS "Namespaces"

.in +1c
.ti -1c
.RI " \fBglm\fP"
.br
.RI "\fBCore features\fP "
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL vec< L, bool, Q > \fBglm::isPowerOfTwo\fP (vec< L, T, Q > const &v)"
.br
.ti -1c
.RI "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL vec< L, T, Q > \fBglm::nextPowerOfTwo\fP (vec< L, T, Q > const &v)"
.br
.ti -1c
.RI "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL vec< L, T, Q > \fBglm::prevPowerOfTwo\fP (vec< L, T, Q > const &v)"
.br
.ti -1c
.RI "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL vec< L, bool, Q > \fBglm::isMultiple\fP (vec< L, T, Q > const &v, T Multiple)"
.br
.ti -1c
.RI "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL vec< L, bool, Q > \fBglm::isMultiple\fP (vec< L, T, Q > const &v, vec< L, T, Q > const &Multiple)"
.br
.ti -1c
.RI "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL vec< L, T, Q > \fBglm::nextMultiple\fP (vec< L, T, Q > const &v, T Multiple)"
.br
.ti -1c
.RI "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL vec< L, T, Q > \fBglm::nextMultiple\fP (vec< L, T, Q > const &v, vec< L, T, Q > const &Multiple)"
.br
.ti -1c
.RI "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL vec< L, T, Q > \fBglm::prevMultiple\fP (vec< L, T, Q > const &v, T Multiple)"
.br
.ti -1c
.RI "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL vec< L, T, Q > \fBglm::prevMultiple\fP (vec< L, T, Q > const &v, vec< L, T, Q > const &Multiple)"
.br
.ti -1c
.RI "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL vec< L, int, Q > \fBglm::findNSB\fP (vec< L, T, Q > const &Source, vec< L, int, Q > SignificantBitCount)"
.br
.in -1c
.SH "Detailed Description"
.PP 
\fBExt_vector_integer\fP
.PP
\fBSee also:\fP
.RS 4
\fBCore features\fP (dependence) 
.PP
\fBExt_vector_integer\fP (dependence) 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Typhoon Engine from the source code\&.
