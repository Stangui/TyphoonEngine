.TH "glm::tdualquat< T, Q >" 3 "Sat Jul 20 2019" "Version 0.1" "Typhoon Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
glm::tdualquat< T, Q >
.SH SYNOPSIS
.br
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef T \fBvalue_type\fP"
.br
.ti -1c
.RI "typedef \fBqua\fP< T, Q > \fBpart_type\fP"
.br
.ti -1c
.RI "typedef length_t \fBlength_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "GLM_FUNC_DECL \fBpart_type\fP & \fBoperator[]\fP (length_type i)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBpart_type\fP const  & \fBoperator[]\fP (length_type i) const"
.br
.ti -1c
.RI "GLM_FUNC_DECL GLM_CONSTEXPR \fBtdualquat\fP (\fBtdualquat\fP< T, Q > const &d) GLM_DEFAULT"
.br
.ti -1c
.RI "template<qualifier P> GLM_FUNC_DECL GLM_CONSTEXPR \fBtdualquat\fP (\fBtdualquat\fP< T, P > const &d)"
.br
.ti -1c
.RI "GLM_FUNC_DECL GLM_CONSTEXPR \fBtdualquat\fP (\fBqua\fP< T, Q > const &real)"
.br
.ti -1c
.RI "GLM_FUNC_DECL GLM_CONSTEXPR \fBtdualquat\fP (\fBqua\fP< T, Q > const &\fBorientation\fP, \fBvec\fP< 3, T, Q > const &translation)"
.br
.ti -1c
.RI "GLM_FUNC_DECL GLM_CONSTEXPR \fBtdualquat\fP (\fBqua\fP< T, Q > const &real, \fBqua\fP< T, Q > const &dual)"
.br
.ti -1c
.RI "template<typename U , qualifier P> GLM_FUNC_DECL GLM_CONSTEXPR GLM_EXPLICIT \fBtdualquat\fP (\fBtdualquat\fP< U, P > const &q)"
.br
.ti -1c
.RI "GLM_FUNC_DECL GLM_EXPLICIT GLM_CONSTEXPR \fBtdualquat\fP (\fBmat\fP< 2, 4, T, Q > const &holder_mat)"
.br
.ti -1c
.RI "GLM_FUNC_DECL GLM_EXPLICIT GLM_CONSTEXPR \fBtdualquat\fP (\fBmat\fP< 3, 4, T, Q > const &aug_mat)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBtdualquat\fP< T, Q > & \fBoperator=\fP (\fBtdualquat\fP< T, Q > const &m) GLM_DEFAULT"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_DECL \fBtdualquat\fP< T, Q > & \fBoperator=\fP (\fBtdualquat\fP< U, Q > const &m)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_DECL \fBtdualquat\fP< T, Q > & \fBoperator *=\fP (U s)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_DECL \fBtdualquat\fP< T, Q > & \fBoperator/=\fP (U s)"
.br
.ti -1c
.RI "template<qualifier P> GLM_FUNC_QUALIFIER GLM_CONSTEXPR \fBtdualquat\fP (\fBtdualquat\fP< T, P > const &d)"
.br
.ti -1c
.RI "template<typename U, qualifier P> GLM_FUNC_QUALIFIER GLM_CONSTEXPR \fBtdualquat\fP (\fBtdualquat\fP< U, P > const &q)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_QUALIFIER \fBtdualquat\fP< T, Q > & \fBoperator=\fP (\fBtdualquat\fP< U, Q > const &q)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_QUALIFIER \fBtdualquat\fP< T, Q > & \fBoperator *=\fP (U s)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_QUALIFIER \fBtdualquat\fP< T, Q > & \fBoperator/=\fP (U s)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static GLM_FUNC_DECL GLM_CONSTEXPR length_type \fBlength\fP ()"
.br
.RI "Return the count of components of a dual quaternion\&. "
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBqua\fP< T, Q > \fBreal\fP"
.br
.ti -1c
.RI "\fBqua\fP< T, Q > \fBdual\fP"
.br
.in -1c

.SH "Author"
.PP 
Generated automatically by Doxygen for Typhoon Engine from the source code\&.
