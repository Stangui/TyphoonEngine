.TH "gtc_quaternion" 3 "Sat Jul 20 2019" "Version 0.1" "Typhoon Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
gtc_quaternion
.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "template<typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP< 3, T, Q > \fBglm::eulerAngles\fP (\fBqua\fP< T, Q > const &x)"
.br
.ti -1c
.RI "template<typename T , qualifier Q> GLM_FUNC_DECL T \fBglm::roll\fP (\fBqua\fP< T, Q > const &x)"
.br
.ti -1c
.RI "template<typename T , qualifier Q> GLM_FUNC_DECL T \fBglm::pitch\fP (\fBqua\fP< T, Q > const &x)"
.br
.ti -1c
.RI "template<typename T , qualifier Q> GLM_FUNC_DECL T \fBglm::yaw\fP (\fBqua\fP< T, Q > const &x)"
.br
.ti -1c
.RI "template<typename T , qualifier Q> GLM_FUNC_DECL \fBmat\fP< 3, 3, T, Q > \fBglm::mat3_cast\fP (\fBqua\fP< T, Q > const &x)"
.br
.ti -1c
.RI "template<typename T , qualifier Q> GLM_FUNC_DECL \fBmat\fP< 4, 4, T, Q > \fBglm::mat4_cast\fP (\fBqua\fP< T, Q > const &x)"
.br
.ti -1c
.RI "template<typename T , qualifier Q> GLM_FUNC_DECL \fBqua\fP< T, Q > \fBglm::quat_cast\fP (\fBmat\fP< 3, 3, T, Q > const &x)"
.br
.ti -1c
.RI "template<typename T , qualifier Q> GLM_FUNC_DECL \fBqua\fP< T, Q > \fBglm::quat_cast\fP (\fBmat\fP< 4, 4, T, Q > const &x)"
.br
.ti -1c
.RI "template<typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP< 4, bool, Q > \fBglm::lessThan\fP (\fBqua\fP< T, Q > const &x, \fBqua\fP< T, Q > const &y)"
.br
.ti -1c
.RI "template<typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP< 4, bool, Q > \fBglm::lessThanEqual\fP (\fBqua\fP< T, Q > const &x, \fBqua\fP< T, Q > const &y)"
.br
.ti -1c
.RI "template<typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP< 4, bool, Q > \fBglm::greaterThan\fP (\fBqua\fP< T, Q > const &x, \fBqua\fP< T, Q > const &y)"
.br
.ti -1c
.RI "template<typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP< 4, bool, Q > \fBglm::greaterThanEqual\fP (\fBqua\fP< T, Q > const &x, \fBqua\fP< T, Q > const &y)"
.br
.ti -1c
.RI "template<typename T , qualifier Q> GLM_FUNC_DECL \fBqua\fP< T, Q > \fBglm::quatLookAt\fP (\fBvec\fP< 3, T, Q > const &direction, \fBvec\fP< 3, T, Q > const &up)"
.br
.ti -1c
.RI "template<typename T , qualifier Q> GLM_FUNC_DECL \fBqua\fP< T, Q > \fBglm::quatLookAtRH\fP (\fBvec\fP< 3, T, Q > const &direction, \fBvec\fP< 3, T, Q > const &up)"
.br
.ti -1c
.RI "template<typename T , qualifier Q> GLM_FUNC_DECL \fBqua\fP< T, Q > \fBglm::quatLookAtLH\fP (\fBvec\fP< 3, T, Q > const &direction, \fBvec\fP< 3, T, Q > const &up)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Include <\fBglm/gtc/quaternion\&.hpp\fP> to use the features of this extension\&.
.PP
Defines a templated quaternion type and several quaternion operations\&. 
.SH "Function Documentation"
.PP 
.SS "template<typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP<3, T, Q> glm::eulerAngles (\fBqua\fP< T, Q > const & x)"
Returns euler angles, pitch as x, yaw as y, roll as z\&. The result is expressed in radians\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP Floating-point scalar types\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_quaternion\fP 
.RE
.PP

.SS "template<typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP<4, bool, Q> glm::greaterThan (\fBqua\fP< T, Q > const & x, \fBqua\fP< T, Q > const & y)"
Returns the component-wise comparison of result x > y\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP Floating-point scalar types 
.br
\fIQ\fP Value from qualifier enum
.RE
.PP
\fBSee also:\fP
.RS 4
\fBGLM_EXT_quaternion_relational\fP 
.RE
.PP

.SS "template<typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP<4, bool, Q> glm::greaterThanEqual (\fBqua\fP< T, Q > const & x, \fBqua\fP< T, Q > const & y)"
Returns the component-wise comparison of result x >= y\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP Floating-point scalar types 
.br
\fIQ\fP Value from qualifier enum
.RE
.PP
\fBSee also:\fP
.RS 4
\fBGLM_EXT_quaternion_relational\fP 
.RE
.PP

.SS "template<typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP<4, bool, Q> glm::lessThan (\fBqua\fP< T, Q > const & x, \fBqua\fP< T, Q > const & y)"
Returns the component-wise comparison result of x < y\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP Floating-point scalar types 
.br
\fIQ\fP Value from qualifier enum
.RE
.PP
\fBSee also:\fP
.RS 4
\fBGLM_EXT_quaternion_relational\fP 
.RE
.PP

.SS "template<typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP<4, bool, Q> glm::lessThanEqual (\fBqua\fP< T, Q > const & x, \fBqua\fP< T, Q > const & y)"
Returns the component-wise comparison of result x <= y\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP Floating-point scalar types 
.br
\fIQ\fP Value from qualifier enum
.RE
.PP
\fBSee also:\fP
.RS 4
\fBGLM_EXT_quaternion_relational\fP 
.RE
.PP

.SS "template<typename T , qualifier Q> GLM_FUNC_DECL \fBmat\fP<3, 3, T, Q> glm::mat3_cast (\fBqua\fP< T, Q > const & x)"
Converts a quaternion to a 3 * 3 matrix\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP Floating-point scalar types\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_quaternion\fP 
.RE
.PP

.SS "template<typename T , qualifier Q> GLM_FUNC_DECL \fBmat\fP<4, 4, T, Q> glm::mat4_cast (\fBqua\fP< T, Q > const & x)"
Converts a quaternion to a 4 * 4 matrix\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP Floating-point scalar types\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_quaternion\fP 
.RE
.PP

.SS "template<typename T , qualifier Q> GLM_FUNC_DECL T glm::pitch (\fBqua\fP< T, Q > const & x)"
Returns pitch value of euler angles expressed in radians\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP Floating-point scalar types\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_quaternion\fP 
.RE
.PP

.SS "template<typename T , qualifier Q> GLM_FUNC_DECL \fBqua\fP<T, Q> glm::quat_cast (\fBmat\fP< 3, 3, T, Q > const & x)"
Converts a pure rotation 3 * 3 matrix to a quaternion\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP Floating-point scalar types\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_quaternion\fP 
.RE
.PP

.SS "template<typename T , qualifier Q> GLM_FUNC_DECL \fBqua\fP<T, Q> glm::quat_cast (\fBmat\fP< 4, 4, T, Q > const & x)"
Converts a pure rotation 4 * 4 matrix to a quaternion\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP Floating-point scalar types\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_quaternion\fP 
.RE
.PP

.SS "template<typename T , qualifier Q> GLM_FUNC_DECL \fBqua\fP<T, Q> glm::quatLookAt (\fBvec\fP< 3, T, Q > const & direction, \fBvec\fP< 3, T, Q > const & up)"
Build a look at quaternion based on the default handedness\&.
.PP
\fBParameters:\fP
.RS 4
\fIdirection\fP Desired forward direction\&. Needs to be normalized\&. 
.br
\fIup\fP Up vector, how the camera is oriented\&. Typically (0, 1, 0)\&. 
.RE
.PP

.SS "template<typename T , qualifier Q> GLM_FUNC_DECL \fBqua\fP<T, Q> glm::quatLookAtLH (\fBvec\fP< 3, T, Q > const & direction, \fBvec\fP< 3, T, Q > const & up)"
Build a left-handed look at quaternion\&.
.PP
\fBParameters:\fP
.RS 4
\fIdirection\fP Desired forward direction onto which the +z-axis gets mapped\&. Needs to be normalized\&. 
.br
\fIup\fP Up vector, how the camera is oriented\&. Typically (0, 1, 0)\&. 
.RE
.PP

.SS "template<typename T , qualifier Q> GLM_FUNC_DECL \fBqua\fP<T, Q> glm::quatLookAtRH (\fBvec\fP< 3, T, Q > const & direction, \fBvec\fP< 3, T, Q > const & up)"
Build a right-handed look at quaternion\&.
.PP
\fBParameters:\fP
.RS 4
\fIdirection\fP Desired forward direction onto which the -z-axis gets mapped\&. Needs to be normalized\&. 
.br
\fIup\fP Up vector, how the camera is oriented\&. Typically (0, 1, 0)\&. 
.RE
.PP

.SS "template<typename T , qualifier Q> GLM_FUNC_DECL T glm::roll (\fBqua\fP< T, Q > const & x)"
Returns roll value of euler angles expressed in radians\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP Floating-point scalar types\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_quaternion\fP 
.RE
.PP

.SS "template<typename T , qualifier Q> GLM_FUNC_DECL T glm::yaw (\fBqua\fP< T, Q > const & x)"
Returns yaw value of euler angles expressed in radians\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP Floating-point scalar types\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_quaternion\fP 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Typhoon Engine from the source code\&.
