.TH "spdlog::logger" 3 "Sat Jul 20 2019" "Version 0.1" "Typhoon Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
spdlog::logger
.SH SYNOPSIS
.br
.PP
.PP
Inherited by \fBspdlog::async_logger\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBlogger\fP (std::string name)"
.br
.ti -1c
.RI "template<typename It > \fBlogger\fP (std::string name, It begin, It end)"
.br
.ti -1c
.RI "\fBlogger\fP (std::string name, sink_ptr single_sink)"
.br
.ti -1c
.RI "\fBlogger\fP (std::string name, sinks_init_list sinks)"
.br
.ti -1c
.RI "\fBlogger\fP (const \fBlogger\fP &other)"
.br
.ti -1c
.RI "\fBlogger\fP (\fBlogger\fP &&other)"
.br
.ti -1c
.RI "\fBlogger\fP & \fBoperator=\fP (\fBlogger\fP other)"
.br
.ti -1c
.RI "void \fBswap\fP (\fBspdlog::logger\fP &other)"
.br
.ti -1c
.RI "template<typename\&.\&.\&. Args> void \fBforce_log\fP (\fBsource_loc\fP loc, level::level_enum lvl, string_view_t fmt, const Args &\&.\&.\&. args)"
.br
.ti -1c
.RI "template<typename\&.\&.\&. Args> void \fBlog\fP (\fBsource_loc\fP loc, level::level_enum lvl, string_view_t fmt, const Args &\&.\&.\&. args)"
.br
.ti -1c
.RI "template<typename\&.\&.\&. Args> void \fBlog\fP (level::level_enum lvl, string_view_t fmt, const Args &\&.\&.\&. args)"
.br
.ti -1c
.RI "void \fBlog\fP (\fBsource_loc\fP loc, level::level_enum lvl, const string_view_t msg)"
.br
.ti -1c
.RI "void \fBlog\fP (level::level_enum lvl, string_view_t msg)"
.br
.ti -1c
.RI "template<typename\&.\&.\&. Args> void \fBtrace\fP (string_view_t fmt, const Args &\&.\&.\&. args)"
.br
.ti -1c
.RI "template<typename\&.\&.\&. Args> void \fBdebug\fP (string_view_t fmt, const Args &\&.\&.\&. args)"
.br
.ti -1c
.RI "template<typename\&.\&.\&. Args> void \fBinfo\fP (string_view_t fmt, const Args &\&.\&.\&. args)"
.br
.ti -1c
.RI "template<typename\&.\&.\&. Args> void \fBwarn\fP (string_view_t fmt, const Args &\&.\&.\&. args)"
.br
.ti -1c
.RI "template<typename\&.\&.\&. Args> void \fBerror\fP (string_view_t fmt, const Args &\&.\&.\&. args)"
.br
.ti -1c
.RI "template<typename\&.\&.\&. Args> void \fBcritical\fP (string_view_t fmt, const Args &\&.\&.\&. args)"
.br
.ti -1c
.RI "template<typename T > void \fBlog\fP (level::level_enum lvl, const T &msg)"
.br
.ti -1c
.RI "template<class T , typename std::enable_if< std::is_convertible< T, spdlog::string_view_t >::value, T >::type *  = nullptr> void \fBlog\fP (\fBsource_loc\fP loc, level::level_enum lvl, const T &msg)"
.br
.ti -1c
.RI "template<class T , typename std::enable_if<!std::is_convertible< T, spdlog::string_view_t >::value, T >::type *  = nullptr> void \fBlog\fP (\fBsource_loc\fP loc, level::level_enum lvl, const T &msg)"
.br
.ti -1c
.RI "template<typename T > void \fBtrace\fP (const T &msg)"
.br
.ti -1c
.RI "template<typename T > void \fBdebug\fP (const T &msg)"
.br
.ti -1c
.RI "template<typename T > void \fBinfo\fP (const T &msg)"
.br
.ti -1c
.RI "template<typename T > void \fBwarn\fP (const T &msg)"
.br
.ti -1c
.RI "template<typename T > void \fBerror\fP (const T &msg)"
.br
.ti -1c
.RI "template<typename T > void \fBcritical\fP (const T &msg)"
.br
.ti -1c
.RI "bool \fBshould_log\fP (level::level_enum msg_level) const"
.br
.ti -1c
.RI "void \fBset_level\fP (level::level_enum log_level)"
.br
.ti -1c
.RI "level::level_enum \fBlevel\fP () const"
.br
.ti -1c
.RI "const std::string & \fBname\fP () const"
.br
.ti -1c
.RI "void \fBset_formatter\fP (std::unique_ptr< \fBformatter\fP > f)"
.br
.ti -1c
.RI "void \fBset_pattern\fP (std::string pattern, pattern_time_type time_type=pattern_time_type::local)"
.br
.ti -1c
.RI "void \fBflush\fP ()"
.br
.ti -1c
.RI "void \fBflush_on\fP (level::level_enum log_level)"
.br
.ti -1c
.RI "level::level_enum \fBflush_level\fP () const"
.br
.ti -1c
.RI "const std::vector< sink_ptr > & \fBsinks\fP () const"
.br
.ti -1c
.RI "std::vector< sink_ptr > & \fBsinks\fP ()"
.br
.ti -1c
.RI "void \fBset_error_handler\fP (err_handler)"
.br
.ti -1c
.RI "virtual std::shared_ptr< \fBlogger\fP > \fBclone\fP (std::string logger_name)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static level::level_enum \fBdefault_level\fP ()"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual void \fBsink_it_\fP (\fBdetails::log_msg\fP &msg)"
.br
.ti -1c
.RI "virtual void \fBflush_\fP ()"
.br
.ti -1c
.RI "bool \fBshould_flush_\fP (const \fBdetails::log_msg\fP &msg)"
.br
.ti -1c
.RI "void \fBerr_handler_\fP (const std::string &msg)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "std::string \fBname_\fP"
.br
.ti -1c
.RI "std::vector< sink_ptr > \fBsinks_\fP"
.br
.ti -1c
.RI "spdlog::level_t \fBlevel_\fP {spdlog::logger::default_level()}"
.br
.ti -1c
.RI "spdlog::level_t \fBflush_level_\fP {level::off}"
.br
.ti -1c
.RI "err_handler \fBcustom_err_handler_\fP {nullptr}"
.br
.in -1c

.SH "Author"
.PP 
Generated automatically by Doxygen for Typhoon Engine from the source code\&.
