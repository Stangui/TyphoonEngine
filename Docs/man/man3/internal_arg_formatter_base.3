.TH "internal::arg_formatter_base< Range >" 3 "Sat Jul 20 2019" "Version 0.1" "Typhoon Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
internal::arg_formatter_base< Range >
.SH SYNOPSIS
.br
.PP
.PP
Inherited by \fBarg_formatter< Range >\fP, and \fBprintf_arg_formatter< Range >\fP\&.
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBchar_spec_handler\fP"
.br
.ti -1c
.RI "struct \fBcstring_spec_handler\fP"
.br
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef Range::value_type \fBchar_type\fP"
.br
.ti -1c
.RI "typedef \fBbasic_format_specs\fP< char_type > \fBformat_specs\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBarg_formatter_base\fP (Range r, \fBformat_specs\fP *s, \fBlocale_ref\fP loc)"
.br
.ti -1c
.RI "iterator \fBoperator()\fP (\fBmonostate\fP)"
.br
.ti -1c
.RI "template<typename T > std::enable_if< std::is_integral< T >::\fBvalue\fP||std::is_same< T, char_type >::\fBvalue\fP, iterator >::type \fBoperator()\fP (T \fBvalue\fP)"
.br
.ti -1c
.RI "template<typename T > std::enable_if< std::is_floating_point< T >::\fBvalue\fP, iterator >::type \fBoperator()\fP (T \fBvalue\fP)"
.br
.ti -1c
.RI "iterator \fBoperator()\fP (const char_type *\fBvalue\fP)"
.br
.ti -1c
.RI "iterator \fBoperator()\fP (\fBbasic_string_view\fP< char_type > \fBvalue\fP)"
.br
.ti -1c
.RI "iterator \fBoperator()\fP (const void *\fBvalue\fP)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "decltype(internal::declval< Range >()\&.begin()) typedef \fBiterator\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBwriter_type\fP & \fBwriter\fP ()"
.br
.ti -1c
.RI "\fBformat_specs\fP * \fBspec\fP ()"
.br
.ti -1c
.RI "iterator \fBout\fP ()"
.br
.ti -1c
.RI "void \fBwrite\fP (bool \fBvalue\fP)"
.br
.ti -1c
.RI "void \fBwrite\fP (const char_type *\fBvalue\fP)"
.br
.in -1c

.SH "Author"
.PP 
Generated automatically by Doxygen for Typhoon Engine from the source code\&.
