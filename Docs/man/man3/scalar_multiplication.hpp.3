.TH "Typhoon/ThirdParty/glm/glm/gtx/scalar_multiplication.hpp" 3 "Sat Jul 20 2019" "Version 0.1" "Typhoon Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Typhoon/ThirdParty/glm/glm/gtx/scalar_multiplication.hpp
.SH SYNOPSIS
.br
.PP
\fC#include '\&.\&./detail/setup\&.hpp'\fP
.br
\fC#include '\&.\&./vec2\&.hpp'\fP
.br
\fC#include '\&.\&./vec3\&.hpp'\fP
.br
\fC#include '\&.\&./vec4\&.hpp'\fP
.br
\fC#include '\&.\&./mat2x2\&.hpp'\fP
.br
\fC#include <type_traits>\fP
.br

.SS "Namespaces"

.in +1c
.ti -1c
.RI " \fBglm\fP"
.br
.RI "\fBCore features\fP "
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBGLM_IMPLEMENT_SCAL_MULT\fP(Vec)"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "template<typename T , typename Vec > using \fBglm::return_type_scalar_multiplication\fP = typename std::enable_if< !std::is_same< T, float >::value &&std::is_arithmetic< T >::value, Vec >::type"
.br
.in -1c
.SH "Detailed Description"
.PP 
\fBExperimental extensions\fP
.PP
\fBAuthor:\fP
.RS 4
Joshua Moerman
.RE
.PP
Include <\fBglm/gtx/scalar_multiplication\&.hpp\fP> to use the features of this extension\&.
.PP
Enables scalar multiplication for all types
.PP
Since GLSL is very strict about types, the following (often used) combinations do not work: double * vec4 int * vec4 vec4 / int So we'll fix that! Of course 'float * vec4' should remain the same (hence the enable_if magic) 
.SH "Macro Definition Documentation"
.PP 
.SS "#define GLM_IMPLEMENT_SCAL_MULT(Vec)"
\fBValue:\fP
.PP
.nf
template<typename T> \
    return_type_scalar_multiplication<T, Vec> \
    operator*(T const& s, Vec rh){ \
        return rh *= static_cast<float>(s); \
    } \
     \
    template<typename T> \
    return_type_scalar_multiplication<T, Vec> \
    operator*(Vec lh, T const& s){ \
        return lh *= static_cast<float>(s); \
    } \
     \
    template<typename T> \
    return_type_scalar_multiplication<T, Vec> \
    operator/(Vec lh, T const& s){ \
        return lh *= 1\&.0f / s; \
    }
.fi
.SH "Author"
.PP 
Generated automatically by Doxygen for Typhoon Engine from the source code\&.
