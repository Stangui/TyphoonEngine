.TH "Ext_vector_integer" 3 "Sat Jul 20 2019" "Version 0.1" "Typhoon Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Ext_vector_integer
.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP< L, bool, Q > \fBglm::isPowerOfTwo\fP (\fBvec\fP< L, T, Q > const &v)"
.br
.ti -1c
.RI "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP< L, T, Q > \fBglm::nextPowerOfTwo\fP (\fBvec\fP< L, T, Q > const &v)"
.br
.ti -1c
.RI "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP< L, T, Q > \fBglm::prevPowerOfTwo\fP (\fBvec\fP< L, T, Q > const &v)"
.br
.ti -1c
.RI "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP< L, bool, Q > \fBglm::isMultiple\fP (\fBvec\fP< L, T, Q > const &v, T Multiple)"
.br
.ti -1c
.RI "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP< L, bool, Q > \fBglm::isMultiple\fP (\fBvec\fP< L, T, Q > const &v, \fBvec\fP< L, T, Q > const &Multiple)"
.br
.ti -1c
.RI "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP< L, T, Q > \fBglm::nextMultiple\fP (\fBvec\fP< L, T, Q > const &v, T Multiple)"
.br
.ti -1c
.RI "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP< L, T, Q > \fBglm::nextMultiple\fP (\fBvec\fP< L, T, Q > const &v, \fBvec\fP< L, T, Q > const &Multiple)"
.br
.ti -1c
.RI "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP< L, T, Q > \fBglm::prevMultiple\fP (\fBvec\fP< L, T, Q > const &v, T Multiple)"
.br
.ti -1c
.RI "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP< L, T, Q > \fBglm::prevMultiple\fP (\fBvec\fP< L, T, Q > const &v, \fBvec\fP< L, T, Q > const &Multiple)"
.br
.ti -1c
.RI "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP< L, int, Q > \fBglm::findNSB\fP (\fBvec\fP< L, T, Q > const &Source, \fBvec\fP< L, int, Q > SignificantBitCount)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SH "Function Documentation"
.PP 
.SS "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP<L, int, Q> glm::findNSB (\fBvec\fP< L, T, Q > const & Source, \fBvec\fP< L, int, Q > SignificantBitCount)"
Returns the bit number of the Nth significant bit set to 1 in the binary representation of value\&. If value bitcount is less than the Nth significant bit, -1 will be returned\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIL\fP An integer between 1 and 4 included that qualify the dimension of the vector\&. 
.br
\fIT\fP Signed or unsigned integer scalar types\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fBExt_vector_integer\fP 
.RE
.PP

.SS "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP< L, bool, Q > glm::isMultiple (\fBvec\fP< L, T, Q > const & v, T Multiple)"
Return true if the 'Value' is a multiple of 'Multiple'\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIL\fP Integer between 1 and 4 included that qualify the dimension of the vector 
.br
\fIT\fP Signed or unsigned integer scalar types\&. 
.br
\fIQ\fP Value from qualifier enum
.RE
.PP
\fBSee also:\fP
.RS 4
\fBExt_vector_integer\fP
.RE
.PP
Return true if the 'Value' is a multiple of 'Multiple'\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIL\fP Integer between 1 and 4 included that qualify the dimension of the vector 
.br
\fIT\fP Floating-point or integer scalar types 
.br
\fIQ\fP Value from qualifier enum
.RE
.PP
\fBSee also:\fP
.RS 4
\fBGLM_EXT_scalar_integer\fP 
.RE
.PP

.SS "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP< L, bool, Q > glm::isMultiple (\fBvec\fP< L, T, Q > const & v, \fBvec\fP< L, T, Q > const & Multiple)"
Return true if the 'Value' is a multiple of 'Multiple'\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIL\fP Integer between 1 and 4 included that qualify the dimension of the vector 
.br
\fIT\fP Signed or unsigned integer scalar types\&. 
.br
\fIQ\fP Value from qualifier enum
.RE
.PP
\fBSee also:\fP
.RS 4
\fBExt_vector_integer\fP
.RE
.PP
Return true if the 'Value' is a multiple of 'Multiple'\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIL\fP Integer between 1 and 4 included that qualify the dimension of the vector 
.br
\fIT\fP Floating-point or integer scalar types 
.br
\fIQ\fP Value from qualifier enum
.RE
.PP
\fBSee also:\fP
.RS 4
\fBGLM_EXT_scalar_integer\fP 
.RE
.PP

.SS "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP< L, bool, Q > glm::isPowerOfTwo (\fBvec\fP< L, T, Q > const & v)"
Return true if the value is a power of two number\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIL\fP Integer between 1 and 4 included that qualify the dimension of the vector 
.br
\fIT\fP Signed or unsigned integer scalar types\&. 
.br
\fIQ\fP Value from qualifier enum
.RE
.PP
\fBSee also:\fP
.RS 4
\fBExt_vector_integer\fP
.RE
.PP
Return true if the value is a power of two number\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIL\fP Integer between 1 and 4 included that qualify the dimension of the vector 
.br
\fIT\fP Floating-point or integer scalar types 
.br
\fIQ\fP Value from qualifier enum
.RE
.PP
\fBSee also:\fP
.RS 4
\fBGLM_EXT_scalar_integer\fP 
.RE
.PP

.SS "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP<L, T, Q> glm::nextMultiple (\fBvec\fP< L, T, Q > const & v, T Multiple)"
Higher multiple number of Source\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIL\fP Integer between 1 and 4 included that qualify the dimension of the vector 
.br
\fIT\fP Signed or unsigned integer scalar types\&. 
.br
\fIQ\fP Value from qualifier enum
.RE
.PP
\fBParameters:\fP
.RS 4
\fIv\fP Source values to which is applied the function 
.br
\fIMultiple\fP Must be a null or positive value
.RE
.PP
\fBSee also:\fP
.RS 4
\fBExt_vector_integer\fP 
.RE
.PP

.SS "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP<L, T, Q> glm::nextMultiple (\fBvec\fP< L, T, Q > const & v, \fBvec\fP< L, T, Q > const & Multiple)"
Higher multiple number of Source\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIL\fP Integer between 1 and 4 included that qualify the dimension of the vector 
.br
\fIT\fP Signed or unsigned integer scalar types\&. 
.br
\fIQ\fP Value from qualifier enum
.RE
.PP
\fBParameters:\fP
.RS 4
\fIv\fP Source values to which is applied the function 
.br
\fIMultiple\fP Must be a null or positive value
.RE
.PP
\fBSee also:\fP
.RS 4
\fBExt_vector_integer\fP 
.RE
.PP

.SS "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP<L, T, Q> glm::nextPowerOfTwo (\fBvec\fP< L, T, Q > const & v)"
Return the power of two number which value is just higher the input value, round up to a power of two\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIL\fP Integer between 1 and 4 included that qualify the dimension of the vector 
.br
\fIT\fP Signed or unsigned integer scalar types\&. 
.br
\fIQ\fP Value from qualifier enum
.RE
.PP
\fBSee also:\fP
.RS 4
\fBExt_vector_integer\fP 
.RE
.PP

.SS "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP<L, T, Q> glm::prevMultiple (\fBvec\fP< L, T, Q > const & v, T Multiple)"
Lower multiple number of Source\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIL\fP Integer between 1 and 4 included that qualify the dimension of the vector 
.br
\fIT\fP Signed or unsigned integer scalar types\&. 
.br
\fIQ\fP Value from qualifier enum
.RE
.PP
\fBParameters:\fP
.RS 4
\fIv\fP Source values to which is applied the function 
.br
\fIMultiple\fP Must be a null or positive value
.RE
.PP
\fBSee also:\fP
.RS 4
\fBExt_vector_integer\fP 
.RE
.PP

.SS "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP<L, T, Q> glm::prevMultiple (\fBvec\fP< L, T, Q > const & v, \fBvec\fP< L, T, Q > const & Multiple)"
Lower multiple number of Source\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIL\fP Integer between 1 and 4 included that qualify the dimension of the vector 
.br
\fIT\fP Signed or unsigned integer scalar types\&. 
.br
\fIQ\fP Value from qualifier enum
.RE
.PP
\fBParameters:\fP
.RS 4
\fIv\fP Source values to which is applied the function 
.br
\fIMultiple\fP Must be a null or positive value
.RE
.PP
\fBSee also:\fP
.RS 4
\fBExt_vector_integer\fP 
.RE
.PP

.SS "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP<L, T, Q> glm::prevPowerOfTwo (\fBvec\fP< L, T, Q > const & v)"
Return the power of two number which value is just lower the input value, round down to a power of two\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIL\fP Integer between 1 and 4 included that qualify the dimension of the vector 
.br
\fIT\fP Signed or unsigned integer scalar types\&. 
.br
\fIQ\fP Value from qualifier enum
.RE
.PP
\fBSee also:\fP
.RS 4
\fBExt_vector_integer\fP 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Typhoon Engine from the source code\&.
