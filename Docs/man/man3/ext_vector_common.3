.TH "ext_vector_common" 3 "Sat Jul 20 2019" "Version 0.1" "Typhoon Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ext_vector_common
.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL GLM_CONSTEXPR \fBvec\fP< L, T, Q > \fBglm::min\fP (\fBvec\fP< L, T, Q > const &a, \fBvec\fP< L, T, Q > const &b, \fBvec\fP< L, T, Q > const &c)"
.br
.ti -1c
.RI "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL GLM_CONSTEXPR \fBvec\fP< L, T, Q > \fBglm::min\fP (\fBvec\fP< L, T, Q > const &a, \fBvec\fP< L, T, Q > const &b, \fBvec\fP< L, T, Q > const &c, \fBvec\fP< L, T, Q > const &d)"
.br
.ti -1c
.RI "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL GLM_CONSTEXPR \fBvec\fP< L, T, Q > \fBglm::max\fP (\fBvec\fP< L, T, Q > const &x, \fBvec\fP< L, T, Q > const &y, \fBvec\fP< L, T, Q > const &z)"
.br
.ti -1c
.RI "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL GLM_CONSTEXPR \fBvec\fP< L, T, Q > \fBglm::max\fP (\fBvec\fP< L, T, Q > const &x, \fBvec\fP< L, T, Q > const &y, \fBvec\fP< L, T, Q > const &z, \fBvec\fP< L, T, Q > const &w)"
.br
.ti -1c
.RI "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP< L, T, Q > \fBglm::fmin\fP (\fBvec\fP< L, T, Q > const &x, T y)"
.br
.ti -1c
.RI "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP< L, T, Q > \fBglm::fmin\fP (\fBvec\fP< L, T, Q > const &x, \fBvec\fP< L, T, Q > const &y)"
.br
.ti -1c
.RI "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP< L, T, Q > \fBglm::fmin\fP (\fBvec\fP< L, T, Q > const &a, \fBvec\fP< L, T, Q > const &b, \fBvec\fP< L, T, Q > const &c)"
.br
.ti -1c
.RI "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP< L, T, Q > \fBglm::fmin\fP (\fBvec\fP< L, T, Q > const &a, \fBvec\fP< L, T, Q > const &b, \fBvec\fP< L, T, Q > const &c, \fBvec\fP< L, T, Q > const &d)"
.br
.ti -1c
.RI "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP< L, T, Q > \fBglm::fmax\fP (\fBvec\fP< L, T, Q > const &a, T b)"
.br
.ti -1c
.RI "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP< L, T, Q > \fBglm::fmax\fP (\fBvec\fP< L, T, Q > const &a, \fBvec\fP< L, T, Q > const &b)"
.br
.ti -1c
.RI "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP< L, T, Q > \fBglm::fmax\fP (\fBvec\fP< L, T, Q > const &a, \fBvec\fP< L, T, Q > const &b, \fBvec\fP< L, T, Q > const &c)"
.br
.ti -1c
.RI "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP< L, T, Q > \fBglm::fmax\fP (\fBvec\fP< L, T, Q > const &a, \fBvec\fP< L, T, Q > const &b, \fBvec\fP< L, T, Q > const &c, \fBvec\fP< L, T, Q > const &d)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Exposes min and max functions for 3 to 4 vector parameters\&.
.PP
Include <\fBglm/ext/vector_common\&.hpp\fP> to use the features of this extension\&.
.PP
\fBSee also:\fP
.RS 4
core_common 
.PP
\fBGLM_EXT_scalar_common\fP 
.RE
.PP

.SH "Function Documentation"
.PP 
.SS "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP<L, T, Q> glm::fmax (\fBvec\fP< L, T, Q > const & a, T b)"
Returns y if x < y; otherwise, it returns x\&. If one of the two arguments is NaN, the value of the other argument is returned\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIL\fP Integer between 1 and 4 included that qualify the dimension of the vector 
.br
\fIT\fP Floating-point scalar types 
.br
\fIQ\fP Value from qualifier enum
.RE
.PP
\fBSee also:\fP
.RS 4
\fCstd::fmax documentation\fP 
.RE
.PP

.SS "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP<L, T, Q> glm::fmax (\fBvec\fP< L, T, Q > const & a, \fBvec\fP< L, T, Q > const & b)"
Returns y if x < y; otherwise, it returns x\&. If one of the two arguments is NaN, the value of the other argument is returned\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIL\fP Integer between 1 and 4 included that qualify the dimension of the vector 
.br
\fIT\fP Floating-point scalar types 
.br
\fIQ\fP Value from qualifier enum
.RE
.PP
\fBSee also:\fP
.RS 4
\fCstd::fmax documentation\fP 
.RE
.PP

.SS "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP<L, T, Q> glm::fmax (\fBvec\fP< L, T, Q > const & a, \fBvec\fP< L, T, Q > const & b, \fBvec\fP< L, T, Q > const & c)"
Returns y if x < y; otherwise, it returns x\&. If one of the two arguments is NaN, the value of the other argument is returned\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIL\fP Integer between 1 and 4 included that qualify the dimension of the vector 
.br
\fIT\fP Floating-point scalar types 
.br
\fIQ\fP Value from qualifier enum
.RE
.PP
\fBSee also:\fP
.RS 4
\fCstd::fmax documentation\fP 
.RE
.PP

.SS "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP<L, T, Q> glm::fmax (\fBvec\fP< L, T, Q > const & a, \fBvec\fP< L, T, Q > const & b, \fBvec\fP< L, T, Q > const & c, \fBvec\fP< L, T, Q > const & d)"
Returns y if x < y; otherwise, it returns x\&. If one of the two arguments is NaN, the value of the other argument is returned\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIL\fP Integer between 1 and 4 included that qualify the dimension of the vector 
.br
\fIT\fP Floating-point scalar types 
.br
\fIQ\fP Value from qualifier enum
.RE
.PP
\fBSee also:\fP
.RS 4
\fCstd::fmax documentation\fP 
.RE
.PP

.SS "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP<L, T, Q> glm::fmin (\fBvec\fP< L, T, Q > const & x, T y)"
Returns y if y < x; otherwise, it returns x\&. If one of the two arguments is NaN, the value of the other argument is returned\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIL\fP Integer between 1 and 4 included that qualify the dimension of the vector 
.br
\fIT\fP Floating-point scalar types 
.br
\fIQ\fP Value from qualifier enum
.RE
.PP
\fBSee also:\fP
.RS 4
\fCstd::fmin documentation\fP 
.RE
.PP

.SS "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP<L, T, Q> glm::fmin (\fBvec\fP< L, T, Q > const & x, \fBvec\fP< L, T, Q > const & y)"
Returns y if y < x; otherwise, it returns x\&. If one of the two arguments is NaN, the value of the other argument is returned\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIL\fP Integer between 1 and 4 included that qualify the dimension of the vector 
.br
\fIT\fP Floating-point scalar types 
.br
\fIQ\fP Value from qualifier enum
.RE
.PP
\fBSee also:\fP
.RS 4
\fCstd::fmin documentation\fP 
.RE
.PP

.SS "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP<L, T, Q> glm::fmin (\fBvec\fP< L, T, Q > const & a, \fBvec\fP< L, T, Q > const & b, \fBvec\fP< L, T, Q > const & c)"
Returns y if y < x; otherwise, it returns x\&. If one of the two arguments is NaN, the value of the other argument is returned\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIL\fP Integer between 1 and 4 included that qualify the dimension of the vector 
.br
\fIT\fP Floating-point scalar types 
.br
\fIQ\fP Value from qualifier enum
.RE
.PP
\fBSee also:\fP
.RS 4
\fCstd::fmin documentation\fP 
.RE
.PP

.SS "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP<L, T, Q> glm::fmin (\fBvec\fP< L, T, Q > const & a, \fBvec\fP< L, T, Q > const & b, \fBvec\fP< L, T, Q > const & c, \fBvec\fP< L, T, Q > const & d)"
Returns y if y < x; otherwise, it returns x\&. If one of the two arguments is NaN, the value of the other argument is returned\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIL\fP Integer between 1 and 4 included that qualify the dimension of the vector 
.br
\fIT\fP Floating-point scalar types 
.br
\fIQ\fP Value from qualifier enum
.RE
.PP
\fBSee also:\fP
.RS 4
\fCstd::fmin documentation\fP 
.RE
.PP

.SS "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL GLM_CONSTEXPR \fBvec\fP<L, T, Q> glm::max (\fBvec\fP< L, T, Q > const & x, \fBvec\fP< L, T, Q > const & y, \fBvec\fP< L, T, Q > const & z)"
Return the maximum component-wise values of 3 inputs
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIL\fP Integer between 1 and 4 included that qualify the dimension of the vector 
.br
\fIT\fP Floating-point or integer scalar types 
.br
\fIQ\fP Value from qualifier enum 
.RE
.PP

.SS "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL GLM_CONSTEXPR \fBvec\fP<L, T, Q> glm::max (\fBvec\fP< L, T, Q > const & x, \fBvec\fP< L, T, Q > const & y, \fBvec\fP< L, T, Q > const & z, \fBvec\fP< L, T, Q > const & w)"
Return the maximum component-wise values of 4 inputs
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIL\fP Integer between 1 and 4 included that qualify the dimension of the vector 
.br
\fIT\fP Floating-point or integer scalar types 
.br
\fIQ\fP Value from qualifier enum 
.RE
.PP

.SS "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL GLM_CONSTEXPR \fBvec\fP<L, T, Q> glm::min (\fBvec\fP< L, T, Q > const & a, \fBvec\fP< L, T, Q > const & b, \fBvec\fP< L, T, Q > const & c)"
Return the minimum component-wise values of 3 inputs
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIL\fP Integer between 1 and 4 included that qualify the dimension of the vector 
.br
\fIT\fP Floating-point or integer scalar types 
.br
\fIQ\fP Value from qualifier enum 
.RE
.PP

.SS "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL GLM_CONSTEXPR \fBvec\fP<L, T, Q> glm::min (\fBvec\fP< L, T, Q > const & a, \fBvec\fP< L, T, Q > const & b, \fBvec\fP< L, T, Q > const & c, \fBvec\fP< L, T, Q > const & d)"
Return the minimum component-wise values of 4 inputs
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIL\fP Integer between 1 and 4 included that qualify the dimension of the vector 
.br
\fIT\fP Floating-point or integer scalar types 
.br
\fIQ\fP Value from qualifier enum 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Typhoon Engine from the source code\&.
