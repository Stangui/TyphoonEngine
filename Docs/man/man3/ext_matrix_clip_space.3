.TH "ext_matrix_clip_space" 3 "Sat Jul 20 2019" "Version 0.1" "Typhoon Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ext_matrix_clip_space
.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBmat\fP< 4, 4, T, defaultp > \fBglm::ortho\fP (T left, T right, T bottom, T top)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBmat\fP< 4, 4, T, defaultp > \fBglm::orthoLH_ZO\fP (T left, T right, T bottom, T top, T zNear, T zFar)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBmat\fP< 4, 4, T, defaultp > \fBglm::orthoLH_NO\fP (T left, T right, T bottom, T top, T zNear, T zFar)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBmat\fP< 4, 4, T, defaultp > \fBglm::orthoRH_ZO\fP (T left, T right, T bottom, T top, T zNear, T zFar)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBmat\fP< 4, 4, T, defaultp > \fBglm::orthoRH_NO\fP (T left, T right, T bottom, T top, T zNear, T zFar)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBmat\fP< 4, 4, T, defaultp > \fBglm::orthoZO\fP (T left, T right, T bottom, T top, T zNear, T zFar)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBmat\fP< 4, 4, T, defaultp > \fBglm::orthoNO\fP (T left, T right, T bottom, T top, T zNear, T zFar)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBmat\fP< 4, 4, T, defaultp > \fBglm::orthoLH\fP (T left, T right, T bottom, T top, T zNear, T zFar)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBmat\fP< 4, 4, T, defaultp > \fBglm::orthoRH\fP (T left, T right, T bottom, T top, T zNear, T zFar)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBmat\fP< 4, 4, T, defaultp > \fBglm::ortho\fP (T left, T right, T bottom, T top, T zNear, T zFar)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBmat\fP< 4, 4, T, defaultp > \fBglm::frustumLH_ZO\fP (T left, T right, T bottom, T top, T near, T far)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBmat\fP< 4, 4, T, defaultp > \fBglm::frustumLH_NO\fP (T left, T right, T bottom, T top, T near, T far)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBmat\fP< 4, 4, T, defaultp > \fBglm::frustumRH_ZO\fP (T left, T right, T bottom, T top, T near, T far)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBmat\fP< 4, 4, T, defaultp > \fBglm::frustumRH_NO\fP (T left, T right, T bottom, T top, T near, T far)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBmat\fP< 4, 4, T, defaultp > \fBglm::frustumZO\fP (T left, T right, T bottom, T top, T near, T far)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBmat\fP< 4, 4, T, defaultp > \fBglm::frustumNO\fP (T left, T right, T bottom, T top, T near, T far)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBmat\fP< 4, 4, T, defaultp > \fBglm::frustumLH\fP (T left, T right, T bottom, T top, T near, T far)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBmat\fP< 4, 4, T, defaultp > \fBglm::frustumRH\fP (T left, T right, T bottom, T top, T near, T far)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBmat\fP< 4, 4, T, defaultp > \fBglm::frustum\fP (T left, T right, T bottom, T top, T near, T far)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBmat\fP< 4, 4, T, defaultp > \fBglm::perspectiveRH_ZO\fP (T fovy, T aspect, T near, T far)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBmat\fP< 4, 4, T, defaultp > \fBglm::perspectiveRH_NO\fP (T fovy, T aspect, T near, T far)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBmat\fP< 4, 4, T, defaultp > \fBglm::perspectiveLH_ZO\fP (T fovy, T aspect, T near, T far)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBmat\fP< 4, 4, T, defaultp > \fBglm::perspectiveLH_NO\fP (T fovy, T aspect, T near, T far)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBmat\fP< 4, 4, T, defaultp > \fBglm::perspectiveZO\fP (T fovy, T aspect, T near, T far)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBmat\fP< 4, 4, T, defaultp > \fBglm::perspectiveNO\fP (T fovy, T aspect, T near, T far)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBmat\fP< 4, 4, T, defaultp > \fBglm::perspectiveRH\fP (T fovy, T aspect, T near, T far)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBmat\fP< 4, 4, T, defaultp > \fBglm::perspectiveLH\fP (T fovy, T aspect, T near, T far)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBmat\fP< 4, 4, T, defaultp > \fBglm::perspective\fP (T fovy, T aspect, T near, T far)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBmat\fP< 4, 4, T, defaultp > \fBglm::perspectiveFovRH_ZO\fP (T fov, T width, T height, T near, T far)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBmat\fP< 4, 4, T, defaultp > \fBglm::perspectiveFovRH_NO\fP (T fov, T width, T height, T near, T far)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBmat\fP< 4, 4, T, defaultp > \fBglm::perspectiveFovLH_ZO\fP (T fov, T width, T height, T near, T far)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBmat\fP< 4, 4, T, defaultp > \fBglm::perspectiveFovLH_NO\fP (T fov, T width, T height, T near, T far)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBmat\fP< 4, 4, T, defaultp > \fBglm::perspectiveFovZO\fP (T fov, T width, T height, T near, T far)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBmat\fP< 4, 4, T, defaultp > \fBglm::perspectiveFovNO\fP (T fov, T width, T height, T near, T far)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBmat\fP< 4, 4, T, defaultp > \fBglm::perspectiveFovRH\fP (T fov, T width, T height, T near, T far)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBmat\fP< 4, 4, T, defaultp > \fBglm::perspectiveFovLH\fP (T fov, T width, T height, T near, T far)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBmat\fP< 4, 4, T, defaultp > \fBglm::perspectiveFov\fP (T fov, T width, T height, T near, T far)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBmat\fP< 4, 4, T, defaultp > \fBglm::infinitePerspectiveLH\fP (T fovy, T aspect, T near)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBmat\fP< 4, 4, T, defaultp > \fBglm::infinitePerspectiveRH\fP (T fovy, T aspect, T near)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBmat\fP< 4, 4, T, defaultp > \fBglm::infinitePerspective\fP (T fovy, T aspect, T near)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBmat\fP< 4, 4, T, defaultp > \fBglm::tweakedInfinitePerspective\fP (T fovy, T aspect, T near)"
.br
.ti -1c
.RI "template<typename T > GLM_FUNC_DECL \fBmat\fP< 4, 4, T, defaultp > \fBglm::tweakedInfinitePerspective\fP (T fovy, T aspect, T near, T ep)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Defines functions that generate clip space transformation matrices\&.
.PP
The matrices generated by this extension use standard OpenGL fixed-function conventions\&. For example, the lookAt function generates a transform from world space into the specific eye space that the projective matrix functions (perspective, ortho, etc) are designed to expect\&. The OpenGL compatibility specifications defines the particular layout of this eye space\&.
.PP
Include <\fBglm/ext/matrix_clip_space\&.hpp\fP> to use the features of this extension\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_EXT_matrix_transform\fP 
.PP
\fBGLM_EXT_matrix_projection\fP 
.RE
.PP

.SH "Function Documentation"
.PP 
.SS "template<typename T > GLM_FUNC_DECL \fBmat\fP<4, 4, T, defaultp> glm::frustum (T left, T right, T bottom, T top, T near, T far)"
Creates a frustum matrix with default handedness, using the default handedness and default near and far clip planes definition\&. To change default handedness use GLM_FORCE_LEFT_HANDED\&. To change default near and far clip planes definition use GLM_FORCE_DEPTH_ZERO_TO_ONE\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP A floating-point scalar type 
.RE
.PP
\fBSee also:\fP
.RS 4
\fCglFrustum man page\fP 
.RE
.PP

.SS "template<typename T > GLM_FUNC_DECL \fBmat\fP<4, 4, T, defaultp> glm::frustumLH (T left, T right, T bottom, T top, T near, T far)"
Creates a left handed frustum matrix\&. If GLM_FORCE_DEPTH_ZERO_TO_ONE is defined, the near and far clip planes correspond to z normalized device coordinates of 0 and +1 respectively\&. (Direct3D clip volume definition) Otherwise, the near and far clip planes correspond to z normalized device coordinates of -1 and +1 respectively\&. (OpenGL clip volume definition)
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP A floating-point scalar type 
.RE
.PP

.SS "template<typename T > GLM_FUNC_DECL \fBmat\fP<4, 4, T, defaultp> glm::frustumLH_NO (T left, T right, T bottom, T top, T near, T far)"
Creates a left handed frustum matrix\&. The near and far clip planes correspond to z normalized device coordinates of -1 and +1 respectively\&. (OpenGL clip volume definition)
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP A floating-point scalar type 
.RE
.PP

.SS "template<typename T > GLM_FUNC_DECL \fBmat\fP<4, 4, T, defaultp> glm::frustumLH_ZO (T left, T right, T bottom, T top, T near, T far)"
Creates a left handed frustum matrix\&. The near and far clip planes correspond to z normalized device coordinates of 0 and +1 respectively\&. (Direct3D clip volume definition)
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP A floating-point scalar type 
.RE
.PP

.SS "template<typename T > GLM_FUNC_DECL \fBmat\fP<4, 4, T, defaultp> glm::frustumNO (T left, T right, T bottom, T top, T near, T far)"
Creates a frustum matrix using left-handed coordinates if GLM_FORCE_LEFT_HANDED if defined or right-handed coordinates otherwise\&. The near and far clip planes correspond to z normalized device coordinates of -1 and +1 respectively\&. (OpenGL clip volume definition)
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP A floating-point scalar type 
.RE
.PP

.SS "template<typename T > GLM_FUNC_DECL \fBmat\fP<4, 4, T, defaultp> glm::frustumRH (T left, T right, T bottom, T top, T near, T far)"
Creates a right handed frustum matrix\&. If GLM_FORCE_DEPTH_ZERO_TO_ONE is defined, the near and far clip planes correspond to z normalized device coordinates of 0 and +1 respectively\&. (Direct3D clip volume definition) Otherwise, the near and far clip planes correspond to z normalized device coordinates of -1 and +1 respectively\&. (OpenGL clip volume definition)
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP A floating-point scalar type 
.RE
.PP

.SS "template<typename T > GLM_FUNC_DECL \fBmat\fP<4, 4, T, defaultp> glm::frustumRH_NO (T left, T right, T bottom, T top, T near, T far)"
Creates a right handed frustum matrix\&. The near and far clip planes correspond to z normalized device coordinates of -1 and +1 respectively\&. (OpenGL clip volume definition)
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP A floating-point scalar type 
.RE
.PP

.SS "template<typename T > GLM_FUNC_DECL \fBmat\fP<4, 4, T, defaultp> glm::frustumRH_ZO (T left, T right, T bottom, T top, T near, T far)"
Creates a right handed frustum matrix\&. The near and far clip planes correspond to z normalized device coordinates of 0 and +1 respectively\&. (Direct3D clip volume definition)
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP A floating-point scalar type 
.RE
.PP

.SS "template<typename T > GLM_FUNC_DECL \fBmat\fP<4, 4, T, defaultp> glm::frustumZO (T left, T right, T bottom, T top, T near, T far)"
Creates a frustum matrix using left-handed coordinates if GLM_FORCE_LEFT_HANDED if defined or right-handed coordinates otherwise\&. The near and far clip planes correspond to z normalized device coordinates of 0 and +1 respectively\&. (Direct3D clip volume definition)
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP A floating-point scalar type 
.RE
.PP

.SS "template<typename T > GLM_FUNC_DECL \fBmat\fP<4, 4, T, defaultp> glm::infinitePerspective (T fovy, T aspect, T near)"
Creates a matrix for a symmetric perspective-view frustum with far plane at infinite with default handedness\&.
.PP
\fBParameters:\fP
.RS 4
\fIfovy\fP Specifies the field of view angle, in degrees, in the y direction\&. Expressed in radians\&. 
.br
\fIaspect\fP Specifies the aspect ratio that determines the field of view in the x direction\&. The aspect ratio is the ratio of x (width) to y (height)\&. 
.br
\fInear\fP Specifies the distance from the viewer to the near clipping plane (always positive)\&.
.RE
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP A floating-point scalar type 
.RE
.PP

.SS "template<typename T > GLM_FUNC_DECL \fBmat\fP<4, 4, T, defaultp> glm::infinitePerspectiveLH (T fovy, T aspect, T near)"
Creates a matrix for a left handed, symmetric perspective-view frustum with far plane at infinite\&.
.PP
\fBParameters:\fP
.RS 4
\fIfovy\fP Specifies the field of view angle, in degrees, in the y direction\&. Expressed in radians\&. 
.br
\fIaspect\fP Specifies the aspect ratio that determines the field of view in the x direction\&. The aspect ratio is the ratio of x (width) to y (height)\&. 
.br
\fInear\fP Specifies the distance from the viewer to the near clipping plane (always positive)\&.
.RE
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP A floating-point scalar type 
.RE
.PP

.SS "template<typename T > GLM_FUNC_DECL \fBmat\fP<4, 4, T, defaultp> glm::infinitePerspectiveRH (T fovy, T aspect, T near)"
Creates a matrix for a right handed, symmetric perspective-view frustum with far plane at infinite\&.
.PP
\fBParameters:\fP
.RS 4
\fIfovy\fP Specifies the field of view angle, in degrees, in the y direction\&. Expressed in radians\&. 
.br
\fIaspect\fP Specifies the aspect ratio that determines the field of view in the x direction\&. The aspect ratio is the ratio of x (width) to y (height)\&. 
.br
\fInear\fP Specifies the distance from the viewer to the near clipping plane (always positive)\&.
.RE
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP A floating-point scalar type 
.RE
.PP

.SS "template<typename T > GLM_FUNC_DECL \fBmat\fP<4, 4, T, defaultp> glm::ortho (T left, T right, T bottom, T top)"
Creates a matrix for projecting two-dimensional coordinates onto the screen\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP A floating-point scalar type
.RE
.PP
\fBSee also:\fP
.RS 4
- glm::ortho(T const& left, T const& right, T const& bottom, T const& top, T const& zNear, T const& zFar) 
.PP
\fCgluOrtho2D man page\fP 
.RE
.PP

.SS "template<typename T > GLM_FUNC_DECL \fBmat\fP<4, 4, T, defaultp> glm::ortho (T left, T right, T bottom, T top, T zNear, T zFar)"
Creates a matrix for an orthographic parallel viewing volume, using the default handedness and default near and far clip planes definition\&. To change default handedness use GLM_FORCE_LEFT_HANDED\&. To change default near and far clip planes definition use GLM_FORCE_DEPTH_ZERO_TO_ONE\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP A floating-point scalar type
.RE
.PP
\fBSee also:\fP
.RS 4
- glm::ortho(T const& left, T const& right, T const& bottom, T const& top) 
.PP
\fCglOrtho man page\fP 
.RE
.PP

.SS "template<typename T > GLM_FUNC_DECL \fBmat\fP<4, 4, T, defaultp> glm::orthoLH (T left, T right, T bottom, T top, T zNear, T zFar)"
Creates a matrix for an orthographic parallel viewing volume, using left-handed coordinates\&. If GLM_FORCE_DEPTH_ZERO_TO_ONE is defined, the near and far clip planes correspond to z normalized device coordinates of 0 and +1 respectively\&. (Direct3D clip volume definition) Otherwise, the near and far clip planes correspond to z normalized device coordinates of -1 and +1 respectively\&. (OpenGL clip volume definition)
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP A floating-point scalar type
.RE
.PP
\fBSee also:\fP
.RS 4
- glm::ortho(T const& left, T const& right, T const& bottom, T const& top) 
.RE
.PP

.SS "template<typename T > GLM_FUNC_DECL \fBmat\fP<4, 4, T, defaultp> glm::orthoLH_NO (T left, T right, T bottom, T top, T zNear, T zFar)"
Creates a matrix for an orthographic parallel viewing volume using right-handed coordinates\&. The near and far clip planes correspond to z normalized device coordinates of -1 and +1 respectively\&. (OpenGL clip volume definition)
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP A floating-point scalar type
.RE
.PP
\fBSee also:\fP
.RS 4
- glm::ortho(T const& left, T const& right, T const& bottom, T const& top) 
.RE
.PP

.SS "template<typename T > GLM_FUNC_DECL \fBmat\fP<4, 4, T, defaultp> glm::orthoLH_ZO (T left, T right, T bottom, T top, T zNear, T zFar)"
Creates a matrix for an orthographic parallel viewing volume, using left-handed coordinates\&. The near and far clip planes correspond to z normalized device coordinates of 0 and +1 respectively\&. (Direct3D clip volume definition)
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP A floating-point scalar type
.RE
.PP
\fBSee also:\fP
.RS 4
- glm::ortho(T const& left, T const& right, T const& bottom, T const& top) 
.RE
.PP

.SS "template<typename T > GLM_FUNC_DECL \fBmat\fP<4, 4, T, defaultp> glm::orthoNO (T left, T right, T bottom, T top, T zNear, T zFar)"
Creates a matrix for an orthographic parallel viewing volume, using left-handed coordinates if GLM_FORCE_LEFT_HANDED if defined or right-handed coordinates otherwise\&. The near and far clip planes correspond to z normalized device coordinates of -1 and +1 respectively\&. (OpenGL clip volume definition)
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP A floating-point scalar type
.RE
.PP
\fBSee also:\fP
.RS 4
- glm::ortho(T const& left, T const& right, T const& bottom, T const& top) 
.RE
.PP

.SS "template<typename T > GLM_FUNC_DECL \fBmat\fP<4, 4, T, defaultp> glm::orthoRH (T left, T right, T bottom, T top, T zNear, T zFar)"
Creates a matrix for an orthographic parallel viewing volume, using right-handed coordinates\&. If GLM_FORCE_DEPTH_ZERO_TO_ONE is defined, the near and far clip planes correspond to z normalized device coordinates of 0 and +1 respectively\&. (Direct3D clip volume definition) Otherwise, the near and far clip planes correspond to z normalized device coordinates of -1 and +1 respectively\&. (OpenGL clip volume definition)
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP A floating-point scalar type
.RE
.PP
\fBSee also:\fP
.RS 4
- glm::ortho(T const& left, T const& right, T const& bottom, T const& top) 
.RE
.PP

.SS "template<typename T > GLM_FUNC_DECL \fBmat\fP<4, 4, T, defaultp> glm::orthoRH_NO (T left, T right, T bottom, T top, T zNear, T zFar)"
Creates a matrix for an orthographic parallel viewing volume, using right-handed coordinates\&. The near and far clip planes correspond to z normalized device coordinates of -1 and +1 respectively\&. (OpenGL clip volume definition)
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP A floating-point scalar type
.RE
.PP
\fBSee also:\fP
.RS 4
- glm::ortho(T const& left, T const& right, T const& bottom, T const& top) 
.RE
.PP

.SS "template<typename T > GLM_FUNC_DECL \fBmat\fP<4, 4, T, defaultp> glm::orthoRH_ZO (T left, T right, T bottom, T top, T zNear, T zFar)"
Creates a matrix for an orthographic parallel viewing volume, using left-handed coordinates\&. The near and far clip planes correspond to z normalized device coordinates of 0 and +1 respectively\&. (Direct3D clip volume definition)
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP A floating-point scalar type
.RE
.PP
\fBSee also:\fP
.RS 4
- glm::ortho(T const& left, T const& right, T const& bottom, T const& top) 
.RE
.PP

.SS "template<typename T > GLM_FUNC_DECL \fBmat\fP<4, 4, T, defaultp> glm::orthoZO (T left, T right, T bottom, T top, T zNear, T zFar)"
Creates a matrix for an orthographic parallel viewing volume, using left-handed coordinates\&. The near and far clip planes correspond to z normalized device coordinates of 0 and +1 respectively\&. (Direct3D clip volume definition)
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP A floating-point scalar type
.RE
.PP
\fBSee also:\fP
.RS 4
- glm::ortho(T const& left, T const& right, T const& bottom, T const& top) 
.RE
.PP

.SS "template<typename T > GLM_FUNC_DECL \fBmat\fP<4, 4, T, defaultp> glm::perspective (T fovy, T aspect, T near, T far)"
Creates a matrix for a symetric perspective-view frustum based on the default handedness and default near and far clip planes definition\&. To change default handedness use GLM_FORCE_LEFT_HANDED\&. To change default near and far clip planes definition use GLM_FORCE_DEPTH_ZERO_TO_ONE\&.
.PP
\fBParameters:\fP
.RS 4
\fIfovy\fP Specifies the field of view angle in the y direction\&. Expressed in radians\&. 
.br
\fIaspect\fP Specifies the aspect ratio that determines the field of view in the x direction\&. The aspect ratio is the ratio of x (width) to y (height)\&. 
.br
\fInear\fP Specifies the distance from the viewer to the near clipping plane (always positive)\&. 
.br
\fIfar\fP Specifies the distance from the viewer to the far clipping plane (always positive)\&.
.RE
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP A floating-point scalar type 
.RE
.PP
\fBSee also:\fP
.RS 4
\fCgluPerspective man page\fP 
.RE
.PP

.SS "template<typename T > GLM_FUNC_DECL \fBmat\fP<4, 4, T, defaultp> glm::perspectiveFov (T fov, T width, T height, T near, T far)"
Builds a perspective projection matrix based on a field of view and the default handedness and default near and far clip planes definition\&. To change default handedness use GLM_FORCE_LEFT_HANDED\&. To change default near and far clip planes definition use GLM_FORCE_DEPTH_ZERO_TO_ONE\&.
.PP
\fBParameters:\fP
.RS 4
\fIfov\fP Expressed in radians\&. 
.br
\fIwidth\fP Width of the viewport 
.br
\fIheight\fP Height of the viewport 
.br
\fInear\fP Specifies the distance from the viewer to the near clipping plane (always positive)\&. 
.br
\fIfar\fP Specifies the distance from the viewer to the far clipping plane (always positive)\&.
.RE
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP A floating-point scalar type 
.RE
.PP

.SS "template<typename T > GLM_FUNC_DECL \fBmat\fP<4, 4, T, defaultp> glm::perspectiveFovLH (T fov, T width, T height, T near, T far)"
Builds a left handed perspective projection matrix based on a field of view\&. If GLM_FORCE_DEPTH_ZERO_TO_ONE is defined, the near and far clip planes correspond to z normalized device coordinates of 0 and +1 respectively\&. (Direct3D clip volume definition) Otherwise, the near and far clip planes correspond to z normalized device coordinates of -1 and +1 respectively\&. (OpenGL clip volume definition)
.PP
\fBParameters:\fP
.RS 4
\fIfov\fP Expressed in radians\&. 
.br
\fIwidth\fP Width of the viewport 
.br
\fIheight\fP Height of the viewport 
.br
\fInear\fP Specifies the distance from the viewer to the near clipping plane (always positive)\&. 
.br
\fIfar\fP Specifies the distance from the viewer to the far clipping plane (always positive)\&.
.RE
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP A floating-point scalar type 
.RE
.PP

.SS "template<typename T > GLM_FUNC_DECL \fBmat\fP<4, 4, T, defaultp> glm::perspectiveFovLH_NO (T fov, T width, T height, T near, T far)"
Builds a perspective projection matrix based on a field of view using left-handed coordinates\&. The near and far clip planes correspond to z normalized device coordinates of -1 and +1 respectively\&. (OpenGL clip volume definition)
.PP
\fBParameters:\fP
.RS 4
\fIfov\fP Expressed in radians\&. 
.br
\fIwidth\fP Width of the viewport 
.br
\fIheight\fP Height of the viewport 
.br
\fInear\fP Specifies the distance from the viewer to the near clipping plane (always positive)\&. 
.br
\fIfar\fP Specifies the distance from the viewer to the far clipping plane (always positive)\&.
.RE
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP A floating-point scalar type 
.RE
.PP
todo max(width , Height) / min(width , Height)? 
.SS "template<typename T > GLM_FUNC_DECL \fBmat\fP<4, 4, T, defaultp> glm::perspectiveFovLH_ZO (T fov, T width, T height, T near, T far)"
Builds a perspective projection matrix based on a field of view using left-handed coordinates\&. The near and far clip planes correspond to z normalized device coordinates of 0 and +1 respectively\&. (Direct3D clip volume definition)
.PP
\fBParameters:\fP
.RS 4
\fIfov\fP Expressed in radians\&. 
.br
\fIwidth\fP Width of the viewport 
.br
\fIheight\fP Height of the viewport 
.br
\fInear\fP Specifies the distance from the viewer to the near clipping plane (always positive)\&. 
.br
\fIfar\fP Specifies the distance from the viewer to the far clipping plane (always positive)\&.
.RE
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP A floating-point scalar type 
.RE
.PP
todo max(width , Height) / min(width , Height)? 
.SS "template<typename T > GLM_FUNC_DECL \fBmat\fP<4, 4, T, defaultp> glm::perspectiveFovNO (T fov, T width, T height, T near, T far)"
Builds a perspective projection matrix based on a field of view using left-handed coordinates if GLM_FORCE_LEFT_HANDED if defined or right-handed coordinates otherwise\&. The near and far clip planes correspond to z normalized device coordinates of -1 and +1 respectively\&. (OpenGL clip volume definition)
.PP
\fBParameters:\fP
.RS 4
\fIfov\fP Expressed in radians\&. 
.br
\fIwidth\fP Width of the viewport 
.br
\fIheight\fP Height of the viewport 
.br
\fInear\fP Specifies the distance from the viewer to the near clipping plane (always positive)\&. 
.br
\fIfar\fP Specifies the distance from the viewer to the far clipping plane (always positive)\&.
.RE
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP A floating-point scalar type 
.RE
.PP

.SS "template<typename T > GLM_FUNC_DECL \fBmat\fP<4, 4, T, defaultp> glm::perspectiveFovRH (T fov, T width, T height, T near, T far)"
Builds a right handed perspective projection matrix based on a field of view\&. If GLM_FORCE_DEPTH_ZERO_TO_ONE is defined, the near and far clip planes correspond to z normalized device coordinates of 0 and +1 respectively\&. (Direct3D clip volume definition) Otherwise, the near and far clip planes correspond to z normalized device coordinates of -1 and +1 respectively\&. (OpenGL clip volume definition)
.PP
\fBParameters:\fP
.RS 4
\fIfov\fP Expressed in radians\&. 
.br
\fIwidth\fP Width of the viewport 
.br
\fIheight\fP Height of the viewport 
.br
\fInear\fP Specifies the distance from the viewer to the near clipping plane (always positive)\&. 
.br
\fIfar\fP Specifies the distance from the viewer to the far clipping plane (always positive)\&.
.RE
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP A floating-point scalar type 
.RE
.PP

.SS "template<typename T > GLM_FUNC_DECL \fBmat\fP<4, 4, T, defaultp> glm::perspectiveFovRH_NO (T fov, T width, T height, T near, T far)"
Builds a perspective projection matrix based on a field of view using right-handed coordinates\&. The near and far clip planes correspond to z normalized device coordinates of -1 and +1 respectively\&. (OpenGL clip volume definition)
.PP
\fBParameters:\fP
.RS 4
\fIfov\fP Expressed in radians\&. 
.br
\fIwidth\fP Width of the viewport 
.br
\fIheight\fP Height of the viewport 
.br
\fInear\fP Specifies the distance from the viewer to the near clipping plane (always positive)\&. 
.br
\fIfar\fP Specifies the distance from the viewer to the far clipping plane (always positive)\&.
.RE
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP A floating-point scalar type 
.RE
.PP
todo max(width , Height) / min(width , Height)? 
.SS "template<typename T > GLM_FUNC_DECL \fBmat\fP<4, 4, T, defaultp> glm::perspectiveFovRH_ZO (T fov, T width, T height, T near, T far)"
Builds a perspective projection matrix based on a field of view using right-handed coordinates\&. The near and far clip planes correspond to z normalized device coordinates of 0 and +1 respectively\&. (Direct3D clip volume definition)
.PP
\fBParameters:\fP
.RS 4
\fIfov\fP Expressed in radians\&. 
.br
\fIwidth\fP Width of the viewport 
.br
\fIheight\fP Height of the viewport 
.br
\fInear\fP Specifies the distance from the viewer to the near clipping plane (always positive)\&. 
.br
\fIfar\fP Specifies the distance from the viewer to the far clipping plane (always positive)\&.
.RE
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP A floating-point scalar type 
.RE
.PP
todo max(width , Height) / min(width , Height)? 
.SS "template<typename T > GLM_FUNC_DECL \fBmat\fP<4, 4, T, defaultp> glm::perspectiveFovZO (T fov, T width, T height, T near, T far)"
Builds a perspective projection matrix based on a field of view using left-handed coordinates if GLM_FORCE_LEFT_HANDED if defined or right-handed coordinates otherwise\&. The near and far clip planes correspond to z normalized device coordinates of 0 and +1 respectively\&. (Direct3D clip volume definition)
.PP
\fBParameters:\fP
.RS 4
\fIfov\fP Expressed in radians\&. 
.br
\fIwidth\fP Width of the viewport 
.br
\fIheight\fP Height of the viewport 
.br
\fInear\fP Specifies the distance from the viewer to the near clipping plane (always positive)\&. 
.br
\fIfar\fP Specifies the distance from the viewer to the far clipping plane (always positive)\&.
.RE
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP A floating-point scalar type 
.RE
.PP

.SS "template<typename T > GLM_FUNC_DECL \fBmat\fP<4, 4, T, defaultp> glm::perspectiveLH (T fovy, T aspect, T near, T far)"
Creates a matrix for a left handed, symetric perspective-view frustum\&. If GLM_FORCE_DEPTH_ZERO_TO_ONE is defined, the near and far clip planes correspond to z normalized device coordinates of 0 and +1 respectively\&. (Direct3D clip volume definition) Otherwise, the near and far clip planes correspond to z normalized device coordinates of -1 and +1 respectively\&. (OpenGL clip volume definition)
.PP
\fBParameters:\fP
.RS 4
\fIfovy\fP Specifies the field of view angle, in degrees, in the y direction\&. Expressed in radians\&. 
.br
\fIaspect\fP Specifies the aspect ratio that determines the field of view in the x direction\&. The aspect ratio is the ratio of x (width) to y (height)\&. 
.br
\fInear\fP Specifies the distance from the viewer to the near clipping plane (always positive)\&. 
.br
\fIfar\fP Specifies the distance from the viewer to the far clipping plane (always positive)\&.
.RE
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP A floating-point scalar type 
.RE
.PP

.SS "template<typename T > GLM_FUNC_DECL \fBmat\fP<4, 4, T, defaultp> glm::perspectiveLH_NO (T fovy, T aspect, T near, T far)"
Creates a matrix for a left handed, symetric perspective-view frustum\&. The near and far clip planes correspond to z normalized device coordinates of -1 and +1 respectively\&. (OpenGL clip volume definition)
.PP
\fBParameters:\fP
.RS 4
\fIfovy\fP Specifies the field of view angle, in degrees, in the y direction\&. Expressed in radians\&. 
.br
\fIaspect\fP Specifies the aspect ratio that determines the field of view in the x direction\&. The aspect ratio is the ratio of x (width) to y (height)\&. 
.br
\fInear\fP Specifies the distance from the viewer to the near clipping plane (always positive)\&. 
.br
\fIfar\fP Specifies the distance from the viewer to the far clipping plane (always positive)\&.
.RE
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP A floating-point scalar type 
.RE
.PP

.SS "template<typename T > GLM_FUNC_DECL \fBmat\fP<4, 4, T, defaultp> glm::perspectiveLH_ZO (T fovy, T aspect, T near, T far)"
Creates a matrix for a left handed, symetric perspective-view frustum\&. The near and far clip planes correspond to z normalized device coordinates of 0 and +1 respectively\&. (Direct3D clip volume definition)
.PP
\fBParameters:\fP
.RS 4
\fIfovy\fP Specifies the field of view angle, in degrees, in the y direction\&. Expressed in radians\&. 
.br
\fIaspect\fP Specifies the aspect ratio that determines the field of view in the x direction\&. The aspect ratio is the ratio of x (width) to y (height)\&. 
.br
\fInear\fP Specifies the distance from the viewer to the near clipping plane (always positive)\&. 
.br
\fIfar\fP Specifies the distance from the viewer to the far clipping plane (always positive)\&.
.RE
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP A floating-point scalar type 
.RE
.PP

.SS "template<typename T > GLM_FUNC_DECL \fBmat\fP<4, 4, T, defaultp> glm::perspectiveNO (T fovy, T aspect, T near, T far)"
Creates a matrix for a symetric perspective-view frustum using left-handed coordinates if GLM_FORCE_LEFT_HANDED if defined or right-handed coordinates otherwise\&. The near and far clip planes correspond to z normalized device coordinates of -1 and +1 respectively\&. (OpenGL clip volume definition)
.PP
\fBParameters:\fP
.RS 4
\fIfovy\fP Specifies the field of view angle, in degrees, in the y direction\&. Expressed in radians\&. 
.br
\fIaspect\fP Specifies the aspect ratio that determines the field of view in the x direction\&. The aspect ratio is the ratio of x (width) to y (height)\&. 
.br
\fInear\fP Specifies the distance from the viewer to the near clipping plane (always positive)\&. 
.br
\fIfar\fP Specifies the distance from the viewer to the far clipping plane (always positive)\&.
.RE
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP A floating-point scalar type 
.RE
.PP

.SS "template<typename T > GLM_FUNC_DECL \fBmat\fP<4, 4, T, defaultp> glm::perspectiveRH (T fovy, T aspect, T near, T far)"
Creates a matrix for a right handed, symetric perspective-view frustum\&. If GLM_FORCE_DEPTH_ZERO_TO_ONE is defined, the near and far clip planes correspond to z normalized device coordinates of 0 and +1 respectively\&. (Direct3D clip volume definition) Otherwise, the near and far clip planes correspond to z normalized device coordinates of -1 and +1 respectively\&. (OpenGL clip volume definition)
.PP
\fBParameters:\fP
.RS 4
\fIfovy\fP Specifies the field of view angle, in degrees, in the y direction\&. Expressed in radians\&. 
.br
\fIaspect\fP Specifies the aspect ratio that determines the field of view in the x direction\&. The aspect ratio is the ratio of x (width) to y (height)\&. 
.br
\fInear\fP Specifies the distance from the viewer to the near clipping plane (always positive)\&. 
.br
\fIfar\fP Specifies the distance from the viewer to the far clipping plane (always positive)\&.
.RE
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP A floating-point scalar type 
.RE
.PP

.SS "template<typename T > GLM_FUNC_DECL \fBmat\fP<4, 4, T, defaultp> glm::perspectiveRH_NO (T fovy, T aspect, T near, T far)"
Creates a matrix for a right handed, symetric perspective-view frustum\&. The near and far clip planes correspond to z normalized device coordinates of -1 and +1 respectively\&. (OpenGL clip volume definition)
.PP
\fBParameters:\fP
.RS 4
\fIfovy\fP Specifies the field of view angle, in degrees, in the y direction\&. Expressed in radians\&. 
.br
\fIaspect\fP Specifies the aspect ratio that determines the field of view in the x direction\&. The aspect ratio is the ratio of x (width) to y (height)\&. 
.br
\fInear\fP Specifies the distance from the viewer to the near clipping plane (always positive)\&. 
.br
\fIfar\fP Specifies the distance from the viewer to the far clipping plane (always positive)\&.
.RE
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP A floating-point scalar type 
.RE
.PP

.SS "template<typename T > GLM_FUNC_DECL \fBmat\fP<4, 4, T, defaultp> glm::perspectiveRH_ZO (T fovy, T aspect, T near, T far)"
Creates a matrix for a right handed, symetric perspective-view frustum\&. The near and far clip planes correspond to z normalized device coordinates of 0 and +1 respectively\&. (Direct3D clip volume definition)
.PP
\fBParameters:\fP
.RS 4
\fIfovy\fP Specifies the field of view angle, in degrees, in the y direction\&. Expressed in radians\&. 
.br
\fIaspect\fP Specifies the aspect ratio that determines the field of view in the x direction\&. The aspect ratio is the ratio of x (width) to y (height)\&. 
.br
\fInear\fP Specifies the distance from the viewer to the near clipping plane (always positive)\&. 
.br
\fIfar\fP Specifies the distance from the viewer to the far clipping plane (always positive)\&.
.RE
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP A floating-point scalar type 
.RE
.PP

.SS "template<typename T > GLM_FUNC_DECL \fBmat\fP<4, 4, T, defaultp> glm::perspectiveZO (T fovy, T aspect, T near, T far)"
Creates a matrix for a symetric perspective-view frustum using left-handed coordinates if GLM_FORCE_LEFT_HANDED if defined or right-handed coordinates otherwise\&. The near and far clip planes correspond to z normalized device coordinates of 0 and +1 respectively\&. (Direct3D clip volume definition)
.PP
\fBParameters:\fP
.RS 4
\fIfovy\fP Specifies the field of view angle, in degrees, in the y direction\&. Expressed in radians\&. 
.br
\fIaspect\fP Specifies the aspect ratio that determines the field of view in the x direction\&. The aspect ratio is the ratio of x (width) to y (height)\&. 
.br
\fInear\fP Specifies the distance from the viewer to the near clipping plane (always positive)\&. 
.br
\fIfar\fP Specifies the distance from the viewer to the far clipping plane (always positive)\&.
.RE
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP A floating-point scalar type 
.RE
.PP

.SS "template<typename T > GLM_FUNC_DECL \fBmat\fP<4, 4, T, defaultp> glm::tweakedInfinitePerspective (T fovy, T aspect, T near)"
Creates a matrix for a symmetric perspective-view frustum with far plane at infinite for graphics hardware that doesn't support depth clamping\&.
.PP
\fBParameters:\fP
.RS 4
\fIfovy\fP Specifies the field of view angle, in degrees, in the y direction\&. Expressed in radians\&. 
.br
\fIaspect\fP Specifies the aspect ratio that determines the field of view in the x direction\&. The aspect ratio is the ratio of x (width) to y (height)\&. 
.br
\fInear\fP Specifies the distance from the viewer to the near clipping plane (always positive)\&.
.RE
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP A floating-point scalar type 
.RE
.PP

.SS "template<typename T > GLM_FUNC_DECL \fBmat\fP<4, 4, T, defaultp> glm::tweakedInfinitePerspective (T fovy, T aspect, T near, T ep)"
Creates a matrix for a symmetric perspective-view frustum with far plane at infinite for graphics hardware that doesn't support depth clamping\&.
.PP
\fBParameters:\fP
.RS 4
\fIfovy\fP Specifies the field of view angle, in degrees, in the y direction\&. Expressed in radians\&. 
.br
\fIaspect\fP Specifies the aspect ratio that determines the field of view in the x direction\&. The aspect ratio is the ratio of x (width) to y (height)\&. 
.br
\fInear\fP Specifies the distance from the viewer to the near clipping plane (always positive)\&. 
.br
\fIep\fP Epsilon
.RE
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP A floating-point scalar type 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Typhoon Engine from the source code\&.
