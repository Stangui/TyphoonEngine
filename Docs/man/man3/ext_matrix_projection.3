.TH "ext_matrix_projection" 3 "Sat Jul 20 2019" "Version 0.1" "Typhoon Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ext_matrix_projection
.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "template<typename T , typename U , qualifier Q> GLM_FUNC_DECL \fBvec\fP< 3, T, Q > \fBglm::projectZO\fP (\fBvec\fP< 3, T, Q > const &obj, \fBmat\fP< 4, 4, T, Q > const &model, \fBmat\fP< 4, 4, T, Q > const &\fBproj\fP, \fBvec\fP< 4, U, Q > const &viewport)"
.br
.ti -1c
.RI "template<typename T , typename U , qualifier Q> GLM_FUNC_DECL \fBvec\fP< 3, T, Q > \fBglm::projectNO\fP (\fBvec\fP< 3, T, Q > const &obj, \fBmat\fP< 4, 4, T, Q > const &model, \fBmat\fP< 4, 4, T, Q > const &\fBproj\fP, \fBvec\fP< 4, U, Q > const &viewport)"
.br
.ti -1c
.RI "template<typename T , typename U , qualifier Q> GLM_FUNC_DECL \fBvec\fP< 3, T, Q > \fBglm::project\fP (\fBvec\fP< 3, T, Q > const &obj, \fBmat\fP< 4, 4, T, Q > const &model, \fBmat\fP< 4, 4, T, Q > const &\fBproj\fP, \fBvec\fP< 4, U, Q > const &viewport)"
.br
.ti -1c
.RI "template<typename T , typename U , qualifier Q> GLM_FUNC_DECL \fBvec\fP< 3, T, Q > \fBglm::unProjectZO\fP (\fBvec\fP< 3, T, Q > const &win, \fBmat\fP< 4, 4, T, Q > const &model, \fBmat\fP< 4, 4, T, Q > const &\fBproj\fP, \fBvec\fP< 4, U, Q > const &viewport)"
.br
.ti -1c
.RI "template<typename T , typename U , qualifier Q> GLM_FUNC_DECL \fBvec\fP< 3, T, Q > \fBglm::unProjectNO\fP (\fBvec\fP< 3, T, Q > const &win, \fBmat\fP< 4, 4, T, Q > const &model, \fBmat\fP< 4, 4, T, Q > const &\fBproj\fP, \fBvec\fP< 4, U, Q > const &viewport)"
.br
.ti -1c
.RI "template<typename T , typename U , qualifier Q> GLM_FUNC_DECL \fBvec\fP< 3, T, Q > \fBglm::unProject\fP (\fBvec\fP< 3, T, Q > const &win, \fBmat\fP< 4, 4, T, Q > const &model, \fBmat\fP< 4, 4, T, Q > const &\fBproj\fP, \fBvec\fP< 4, U, Q > const &viewport)"
.br
.ti -1c
.RI "template<typename T , qualifier Q, typename U > GLM_FUNC_DECL \fBmat\fP< 4, 4, T, Q > \fBglm::pickMatrix\fP (\fBvec\fP< 2, T, Q > const &center, \fBvec\fP< 2, T, Q > const &delta, \fBvec\fP< 4, U, Q > const &viewport)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Functions that generate common projection transformation matrices\&.
.PP
The matrices generated by this extension use standard OpenGL fixed-function conventions\&. For example, the lookAt function generates a transform from world space into the specific eye space that the projective matrix functions (perspective, ortho, etc) are designed to expect\&. The OpenGL compatibility specifications defines the particular layout of this eye space\&.
.PP
Include <\fBglm/ext/matrix_projection\&.hpp\fP> to use the features of this extension\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_EXT_matrix_transform\fP 
.PP
\fBGLM_EXT_matrix_clip_space\fP 
.RE
.PP

.SH "Function Documentation"
.PP 
.SS "template<typename T , qualifier Q, typename U > GLM_FUNC_DECL \fBmat\fP<4, 4, T, Q> glm::pickMatrix (\fBvec\fP< 2, T, Q > const & center, \fBvec\fP< 2, T, Q > const & delta, \fBvec\fP< 4, U, Q > const & viewport)"
Define a picking region
.PP
\fBParameters:\fP
.RS 4
\fIcenter\fP Specify the center of a picking region in window coordinates\&. 
.br
\fIdelta\fP Specify the width and height, respectively, of the picking region in window coordinates\&. 
.br
\fIviewport\fP Rendering viewport 
.RE
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP Native type used for the computation\&. Currently supported: half (not recommended), float or double\&. 
.br
\fIU\fP Currently supported: Floating-point types and integer types\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fCgluPickMatrix man page\fP 
.RE
.PP

.SS "template<typename T , typename U , qualifier Q> GLM_FUNC_DECL \fBvec\fP<3, T, Q> glm::project (\fBvec\fP< 3, T, Q > const & obj, \fBmat\fP< 4, 4, T, Q > const & model, \fBmat\fP< 4, 4, T, Q > const & proj, \fBvec\fP< 4, U, Q > const & viewport)"
Map the specified object coordinates (obj\&.x, obj\&.y, obj\&.z) into window coordinates using default near and far clip planes definition\&. To change default near and far clip planes definition use GLM_FORCE_DEPTH_ZERO_TO_ONE\&.
.PP
\fBParameters:\fP
.RS 4
\fIobj\fP Specify the object coordinates\&. 
.br
\fImodel\fP Specifies the current modelview matrix 
.br
\fIproj\fP Specifies the current projection matrix 
.br
\fIviewport\fP Specifies the current viewport 
.RE
.PP
\fBReturns:\fP
.RS 4
Return the computed window coordinates\&. 
.RE
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP Native type used for the computation\&. Currently supported: half (not recommended), float or double\&. 
.br
\fIU\fP Currently supported: Floating-point types and integer types\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fCgluProject man page\fP 
.RE
.PP

.SS "template<typename T , typename U , qualifier Q> GLM_FUNC_DECL \fBvec\fP<3, T, Q> glm::projectNO (\fBvec\fP< 3, T, Q > const & obj, \fBmat\fP< 4, 4, T, Q > const & model, \fBmat\fP< 4, 4, T, Q > const & proj, \fBvec\fP< 4, U, Q > const & viewport)"
Map the specified object coordinates (obj\&.x, obj\&.y, obj\&.z) into window coordinates\&. The near and far clip planes correspond to z normalized device coordinates of -1 and +1 respectively\&. (OpenGL clip volume definition)
.PP
\fBParameters:\fP
.RS 4
\fIobj\fP Specify the object coordinates\&. 
.br
\fImodel\fP Specifies the current modelview matrix 
.br
\fIproj\fP Specifies the current projection matrix 
.br
\fIviewport\fP Specifies the current viewport 
.RE
.PP
\fBReturns:\fP
.RS 4
Return the computed window coordinates\&. 
.RE
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP Native type used for the computation\&. Currently supported: half (not recommended), float or double\&. 
.br
\fIU\fP Currently supported: Floating-point types and integer types\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fCgluProject man page\fP 
.RE
.PP

.SS "template<typename T , typename U , qualifier Q> GLM_FUNC_DECL \fBvec\fP<3, T, Q> glm::projectZO (\fBvec\fP< 3, T, Q > const & obj, \fBmat\fP< 4, 4, T, Q > const & model, \fBmat\fP< 4, 4, T, Q > const & proj, \fBvec\fP< 4, U, Q > const & viewport)"
Map the specified object coordinates (obj\&.x, obj\&.y, obj\&.z) into window coordinates\&. The near and far clip planes correspond to z normalized device coordinates of 0 and +1 respectively\&. (Direct3D clip volume definition)
.PP
\fBParameters:\fP
.RS 4
\fIobj\fP Specify the object coordinates\&. 
.br
\fImodel\fP Specifies the current modelview matrix 
.br
\fIproj\fP Specifies the current projection matrix 
.br
\fIviewport\fP Specifies the current viewport 
.RE
.PP
\fBReturns:\fP
.RS 4
Return the computed window coordinates\&. 
.RE
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP Native type used for the computation\&. Currently supported: half (not recommended), float or double\&. 
.br
\fIU\fP Currently supported: Floating-point types and integer types\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fCgluProject man page\fP 
.RE
.PP

.SS "template<typename T , typename U , qualifier Q> GLM_FUNC_DECL \fBvec\fP<3, T, Q> glm::unProject (\fBvec\fP< 3, T, Q > const & win, \fBmat\fP< 4, 4, T, Q > const & model, \fBmat\fP< 4, 4, T, Q > const & proj, \fBvec\fP< 4, U, Q > const & viewport)"
Map the specified window coordinates (win\&.x, win\&.y, win\&.z) into object coordinates using default near and far clip planes definition\&. To change default near and far clip planes definition use GLM_FORCE_DEPTH_ZERO_TO_ONE\&.
.PP
\fBParameters:\fP
.RS 4
\fIwin\fP Specify the window coordinates to be mapped\&. 
.br
\fImodel\fP Specifies the modelview matrix 
.br
\fIproj\fP Specifies the projection matrix 
.br
\fIviewport\fP Specifies the viewport 
.RE
.PP
\fBReturns:\fP
.RS 4
Returns the computed object coordinates\&. 
.RE
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP Native type used for the computation\&. Currently supported: half (not recommended), float or double\&. 
.br
\fIU\fP Currently supported: Floating-point types and integer types\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fCgluUnProject man page\fP 
.RE
.PP

.SS "template<typename T , typename U , qualifier Q> GLM_FUNC_DECL \fBvec\fP<3, T, Q> glm::unProjectNO (\fBvec\fP< 3, T, Q > const & win, \fBmat\fP< 4, 4, T, Q > const & model, \fBmat\fP< 4, 4, T, Q > const & proj, \fBvec\fP< 4, U, Q > const & viewport)"
Map the specified window coordinates (win\&.x, win\&.y, win\&.z) into object coordinates\&. The near and far clip planes correspond to z normalized device coordinates of -1 and +1 respectively\&. (OpenGL clip volume definition)
.PP
\fBParameters:\fP
.RS 4
\fIwin\fP Specify the window coordinates to be mapped\&. 
.br
\fImodel\fP Specifies the modelview matrix 
.br
\fIproj\fP Specifies the projection matrix 
.br
\fIviewport\fP Specifies the viewport 
.RE
.PP
\fBReturns:\fP
.RS 4
Returns the computed object coordinates\&. 
.RE
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP Native type used for the computation\&. Currently supported: half (not recommended), float or double\&. 
.br
\fIU\fP Currently supported: Floating-point types and integer types\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fCgluUnProject man page\fP 
.RE
.PP

.SS "template<typename T , typename U , qualifier Q> GLM_FUNC_DECL \fBvec\fP<3, T, Q> glm::unProjectZO (\fBvec\fP< 3, T, Q > const & win, \fBmat\fP< 4, 4, T, Q > const & model, \fBmat\fP< 4, 4, T, Q > const & proj, \fBvec\fP< 4, U, Q > const & viewport)"
Map the specified window coordinates (win\&.x, win\&.y, win\&.z) into object coordinates\&. The near and far clip planes correspond to z normalized device coordinates of 0 and +1 respectively\&. (Direct3D clip volume definition)
.PP
\fBParameters:\fP
.RS 4
\fIwin\fP Specify the window coordinates to be mapped\&. 
.br
\fImodel\fP Specifies the modelview matrix 
.br
\fIproj\fP Specifies the projection matrix 
.br
\fIviewport\fP Specifies the viewport 
.RE
.PP
\fBReturns:\fP
.RS 4
Returns the computed object coordinates\&. 
.RE
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP Native type used for the computation\&. Currently supported: half (not recommended), float or double\&. 
.br
\fIU\fP Currently supported: Floating-point types and integer types\&.
.RE
.PP
\fBSee also:\fP
.RS 4
\fCgluUnProject man page\fP 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Typhoon Engine from the source code\&.
