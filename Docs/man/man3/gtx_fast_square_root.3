.TH "gtx_fast_square_root" 3 "Sat Jul 20 2019" "Version 0.1" "Typhoon Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
gtx_fast_square_root
.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBglm::fastSqrt\fP (genType x)"
.br
.ti -1c
.RI "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP< L, T, Q > \fBglm::fastSqrt\fP (\fBvec\fP< L, T, Q > const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBglm::fastInverseSqrt\fP (genType x)"
.br
.ti -1c
.RI "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP< L, T, Q > \fBglm::fastInverseSqrt\fP (\fBvec\fP< L, T, Q > const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBglm::fastLength\fP (genType x)"
.br
.ti -1c
.RI "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL T \fBglm::fastLength\fP (\fBvec\fP< L, T, Q > const &x)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBglm::fastDistance\fP (genType x, genType y)"
.br
.ti -1c
.RI "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL T \fBglm::fastDistance\fP (\fBvec\fP< L, T, Q > const &x, \fBvec\fP< L, T, Q > const &y)"
.br
.ti -1c
.RI "template<typename genType > GLM_FUNC_DECL genType \fBglm::fastNormalize\fP (genType const &x)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Include <\fBglm/gtx/fast_square_root\&.hpp\fP> to use the features of this extension\&.
.PP
Fast but less accurate implementations of square root based functions\&.
.IP "\(bu" 2
Sqrt optimisation based on Newton's method, www\&.gamedev\&.net/community/forums/topic\&.asp?topic id=139956 
.PP

.SH "Function Documentation"
.PP 
.SS "template<typename genType > GLM_FUNC_DECL genType glm::fastDistance (genType x, genType y)"
Faster than the common distance function but less accurate\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_fast_square_root\fP extension\&. 
.RE
.PP

.SS "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL T glm::fastDistance (\fBvec\fP< L, T, Q > const & x, \fBvec\fP< L, T, Q > const & y)"
Faster than the common distance function but less accurate\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_fast_square_root\fP extension\&. 
.RE
.PP

.SS "template<typename genType > GLM_FUNC_DECL genType glm::fastInverseSqrt (genType x)"
Faster than the common inversesqrt function but less accurate\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_fast_square_root\fP extension\&. 
.RE
.PP

.SS "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP<L, T, Q> glm::fastInverseSqrt (\fBvec\fP< L, T, Q > const & x)"
Faster than the common inversesqrt function but less accurate\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_fast_square_root\fP extension\&. 
.RE
.PP

.SS "template<typename genType > GLM_FUNC_DECL genType glm::fastLength (genType x)"
Faster than the common length function but less accurate\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_fast_square_root\fP extension\&. 
.RE
.PP

.SS "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL T glm::fastLength (\fBvec\fP< L, T, Q > const & x)"
Faster than the common length function but less accurate\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_fast_square_root\fP extension\&. 
.RE
.PP

.SS "template<typename genType > GLM_FUNC_DECL genType glm::fastNormalize (genType const & x)"
Faster than the common normalize function but less accurate\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_fast_square_root\fP extension\&. 
.RE
.PP

.SS "template<typename genType > GLM_FUNC_DECL genType glm::fastSqrt (genType x)"
Faster than the common sqrt function but less accurate\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_fast_square_root\fP extension\&. 
.RE
.PP

.SS "template<length_t L, typename T , qualifier Q> GLM_FUNC_DECL \fBvec\fP<L, T, Q> glm::fastSqrt (\fBvec\fP< L, T, Q > const & x)"
Faster than the common sqrt function but less accurate\&.
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTX_fast_square_root\fP extension\&. 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Typhoon Engine from the source code\&.
