.TH "system_error" 3 "Sat Jul 20 2019" "Version 0.1" "Typhoon Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
system_error
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <format\&.h>\fP
.PP
Inherits runtime_error\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "template<typename\&.\&.\&. Args> \fBsystem_error\fP (int \fBerror_code\fP, \fBstring_view\fP message, const Args &\&.\&.\&. args)"
.br
.ti -1c
.RI "int \fBerror_code\fP () const"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "int \fBerror_code_\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
An error returned by an operating system or a language runtime, for example a file opening error\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename\&.\&.\&. Args> system_error::system_error (int error_code, \fBstring_view\fP message, const Args &\&.\&.\&. args)\fC [inline]\fP"
\\rst Constructs a :class:\fCfmt::system_error\fP object with a description formatted with \fCfmt::format_system_error\fP\&. \fImessage\fP and additional arguments passed into the constructor are formatted similarly to \fCfmt::format\fP\&.
.PP
Example**::
.PP
This throws a \fBsystem_error\fP with the description cannot open file 'madeup': No such file or directory or similar (system message may vary)\&. const char *filename = 'madeup'; std::FILE *file = std::fopen(filename, 'r'); if (!file) throw fmt::system_error(errno, 'cannot open file '{}'', filename); \\endrst 

.SH "Author"
.PP 
Generated automatically by Doxygen for Typhoon Engine from the source code\&.
