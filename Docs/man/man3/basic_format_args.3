.TH "basic_format_args< Context >" 3 "Sat Jul 20 2019" "Version 0.1" "Typhoon Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
basic_format_args< Context >
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <core\&.h>\fP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef unsigned \fBsize_type\fP"
.br
.ti -1c
.RI "typedef \fBbasic_format_arg\fP< Context > \fBformat_arg\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "template<typename\&.\&.\&. Args> \fBbasic_format_args\fP (const \fBformat_arg_store\fP< Context, Args\&.\&.\&. > &store)"
.br
.ti -1c
.RI "\fBbasic_format_args\fP (const \fBformat_arg\fP *args, size_type count)"
.br
.ti -1c
.RI "\fBformat_arg\fP \fBget\fP (size_type index) const"
.br
.ti -1c
.RI "size_type \fBmax_size\fP () const"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fBinternal::arg_map< Context >\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename Context>
.br
class basic_format_args< Context >"
Formatting arguments\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename Context> template<typename\&.\&.\&. Args> \fBbasic_format_args\fP< Context >::\fBbasic_format_args\fP (const \fBformat_arg_store\fP< Context, Args\&.\&.\&. > & store)\fC [inline]\fP"
\\rst Constructs a \fC\fBbasic_format_args\fP\fP object from \fC~fmt\fBformat_arg_store\fP\fP\&. \\endrst 
.SS "template<typename Context> \fBbasic_format_args\fP< Context >::\fBbasic_format_args\fP (const \fBformat_arg\fP * args, size_type count)\fC [inline]\fP"
\\rst Constructs a \fC\fBbasic_format_args\fP\fP object from a dynamic set of arguments\&. \\endrst 
.SH "Member Function Documentation"
.PP 
.SS "template<typename Context> \fBformat_arg\fP \fBbasic_format_args\fP< Context >::get (size_type index) const\fC [inline]\fP"
Returns the argument at specified index\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Typhoon Engine from the source code\&.
