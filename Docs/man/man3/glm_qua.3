.TH "glm::qua< T, Q >" 3 "Sat Jul 20 2019" "Version 0.1" "Typhoon Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
glm::qua< T, Q >
.SH SYNOPSIS
.br
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef \fBqua\fP< T, Q > \fBtype\fP"
.br
.ti -1c
.RI "typedef T \fBvalue_type\fP"
.br
.ti -1c
.RI "typedef length_t \fBlength_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "GLM_FUNC_DECL GLM_CONSTEXPR T & \fBoperator[]\fP (length_type i)"
.br
.ti -1c
.RI "GLM_FUNC_DECL GLM_CONSTEXPR T const  & \fBoperator[]\fP (length_type i) const"
.br
.ti -1c
.RI "GLM_FUNC_DECL GLM_CONSTEXPR \fBqua\fP (\fBqua\fP< T, Q > const &q) GLM_DEFAULT"
.br
.ti -1c
.RI "template<qualifier P> GLM_FUNC_DECL GLM_CONSTEXPR \fBqua\fP (\fBqua\fP< T, P > const &q)"
.br
.ti -1c
.RI "GLM_FUNC_DECL GLM_CONSTEXPR \fBqua\fP (T s, \fBvec\fP< 3, T, Q > const &v)"
.br
.ti -1c
.RI "GLM_FUNC_DECL GLM_CONSTEXPR \fBqua\fP (T w, T x, T y, T z)"
.br
.ti -1c
.RI "template<typename U , qualifier P> GLM_FUNC_DECL GLM_CONSTEXPR GLM_EXPLICIT \fBqua\fP (\fBqua\fP< U, P > const &q)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBqua\fP (\fBvec\fP< 3, T, Q > const &u, \fBvec\fP< 3, T, Q > const &v)"
.br
.RI "Explicit conversion operators\&. "
.ti -1c
.RI "GLM_FUNC_DECL GLM_EXPLICIT \fBqua\fP (\fBvec\fP< 3, T, Q > const &\fBeulerAngles\fP)"
.br
.RI "Build a quaternion from euler angles (pitch, yaw, roll), in radians\&. "
.ti -1c
.RI "GLM_FUNC_DECL GLM_EXPLICIT \fBqua\fP (\fBmat\fP< 3, 3, T, Q > const &q)"
.br
.ti -1c
.RI "GLM_FUNC_DECL GLM_EXPLICIT \fBqua\fP (\fBmat\fP< 4, 4, T, Q > const &q)"
.br
.ti -1c
.RI "GLM_FUNC_DECL \fBqua\fP< T, Q > & \fBoperator=\fP (\fBqua\fP< T, Q > const &q) GLM_DEFAULT"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_DECL \fBqua\fP< T, Q > & \fBoperator=\fP (\fBqua\fP< U, Q > const &q)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_DECL \fBqua\fP< T, Q > & \fBoperator+=\fP (\fBqua\fP< U, Q > const &q)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_DECL \fBqua\fP< T, Q > & \fBoperator\-=\fP (\fBqua\fP< U, Q > const &q)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_DECL \fBqua\fP< T, Q > & \fBoperator *=\fP (\fBqua\fP< U, Q > const &q)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_DECL \fBqua\fP< T, Q > & \fBoperator *=\fP (U s)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_DECL \fBqua\fP< T, Q > & \fBoperator/=\fP (U s)"
.br
.ti -1c
.RI "template<qualifier P> GLM_FUNC_QUALIFIER GLM_CONSTEXPR \fBqua\fP (\fBqua\fP< T, P > const &q)"
.br
.ti -1c
.RI "template<typename U, qualifier P> GLM_FUNC_QUALIFIER GLM_CONSTEXPR \fBqua\fP (\fBqua\fP< U, P > const &q)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_QUALIFIER \fBqua\fP< T, Q > & \fBoperator=\fP (\fBqua\fP< U, Q > const &q)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_QUALIFIER \fBqua\fP< T, Q > & \fBoperator+=\fP (\fBqua\fP< U, Q > const &q)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_QUALIFIER \fBqua\fP< T, Q > & \fBoperator\-=\fP (\fBqua\fP< U, Q > const &q)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_QUALIFIER \fBqua\fP< T, Q > & \fBoperator *=\fP (\fBqua\fP< U, Q > const &r)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_QUALIFIER \fBqua\fP< T, Q > & \fBoperator *=\fP (U s)"
.br
.ti -1c
.RI "template<typename U > GLM_FUNC_QUALIFIER \fBqua\fP< T, Q > & \fBoperator/=\fP (U s)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static GLM_FUNC_DECL GLM_CONSTEXPR length_type \fBlength\fP ()"
.br
.RI "Return the count of components of a quaternion\&. "
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "T \fBx\fP"
.br
.ti -1c
.RI "T \fBy\fP"
.br
.ti -1c
.RI "T \fBz\fP"
.br
.ti -1c
.RI "T \fBw\fP"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename T , qualifier Q> GLM_FUNC_QUALIFIER \fBglm::qua\fP< T, Q >::\fBqua\fP (\fBvec\fP< 3, T, Q > const & u, \fBvec\fP< 3, T, Q > const & v)"

.PP
Explicit conversion operators\&. Create a quaternion from two normalized axis
.PP
\fBParameters:\fP
.RS 4
\fIu\fP A first normalized axis 
.br
\fIv\fP A second normalized axis 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBGLM_GTC_quaternion\fP 
.PP
http://lolengine.net/blog/2013/09/18/beautiful-maths-quaternion-from-vectors 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Typhoon Engine from the source code\&.
