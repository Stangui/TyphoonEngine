.TH "Catch::Detail::Approx" 3 "Sat Jul 20 2019" "Version 0.1" "Typhoon Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Catch::Detail::Approx
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBApprox\fP (double value)"
.br
.ti -1c
.RI "\fBApprox\fP \fBoperator\-\fP () const"
.br
.ti -1c
.RI "template<typename T , typename  = typename std::enable_if<std::is_constructible<double, T>::value>::type> \fBApprox\fP \fBoperator()\fP (T const &value)"
.br
.ti -1c
.RI "template<typename T , typename  = typename std::enable_if<std::is_constructible<double, T>::value>::type> \fBApprox\fP (T const &value)"
.br
.ti -1c
.RI "template<typename T , typename  = typename std::enable_if<std::is_constructible<double, T>::value>::type> \fBApprox\fP & \fBepsilon\fP (T const &newEpsilon)"
.br
.ti -1c
.RI "template<typename T , typename  = typename std::enable_if<std::is_constructible<double, T>::value>::type> \fBApprox\fP & \fBmargin\fP (T const &newMargin)"
.br
.ti -1c
.RI "template<typename T , typename  = typename std::enable_if<std::is_constructible<double, T>::value>::type> \fBApprox\fP & \fBscale\fP (T const &newScale)"
.br
.ti -1c
.RI "std::string \fBtoString\fP () const"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBApprox\fP \fBcustom\fP ()"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "template<typename T , typename  = typename std::enable_if<std::is_constructible<double, T>::value>::type> bool \fBoperator==\fP (const T &lhs, \fBApprox\fP const &rhs)"
.br
.ti -1c
.RI "template<typename T , typename  = typename std::enable_if<std::is_constructible<double, T>::value>::type> bool \fBoperator==\fP (\fBApprox\fP const &lhs, const T &rhs)"
.br
.ti -1c
.RI "template<typename T , typename  = typename std::enable_if<std::is_constructible<double, T>::value>::type> bool \fBoperator !=\fP (T const &lhs, \fBApprox\fP const &rhs)"
.br
.ti -1c
.RI "template<typename T , typename  = typename std::enable_if<std::is_constructible<double, T>::value>::type> bool \fBoperator !=\fP (\fBApprox\fP const &lhs, T const &rhs)"
.br
.ti -1c
.RI "template<typename T , typename  = typename std::enable_if<std::is_constructible<double, T>::value>::type> bool \fBoperator<=\fP (T const &lhs, \fBApprox\fP const &rhs)"
.br
.ti -1c
.RI "template<typename T , typename  = typename std::enable_if<std::is_constructible<double, T>::value>::type> bool \fBoperator<=\fP (\fBApprox\fP const &lhs, T const &rhs)"
.br
.ti -1c
.RI "template<typename T , typename  = typename std::enable_if<std::is_constructible<double, T>::value>::type> bool \fBoperator >=\fP (T const &lhs, \fBApprox\fP const &rhs)"
.br
.ti -1c
.RI "template<typename T , typename  = typename std::enable_if<std::is_constructible<double, T>::value>::type> bool \fBoperator >=\fP (\fBApprox\fP const &lhs, T const &rhs)"
.br
.in -1c

.SH "Author"
.PP 
Generated automatically by Doxygen for Typhoon Engine from the source code\&.
